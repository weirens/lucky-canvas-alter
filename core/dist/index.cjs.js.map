{"version":3,"file":"index.cjs.js","sources":["../src/utils/polyfill.js","../src/utils/index.ts","../src/observer/dep.ts","../src/observer/utils.ts","../src/observer/array.ts","../src/observer/index.ts","../src/observer/watcher.ts","../src/lib/lucky.ts","../src/utils/math.ts","../src/utils/tween.ts","../src/lib/wheel.ts","../src/lib/grid.ts","../src/lib/slot.ts","../src/utils/image.ts"],"sourcesContent":["/**\r\n * 由于部分低版本下的某些 app 可能会缺少某些原型方法, 这里增加兼容\r\n */\r\n\r\n// ie11 不兼容 includes 方法\r\nif (!Array.prototype.includes) {\r\n  Object.defineProperty(Array.prototype, 'includes', {\r\n    value: function(valueToFind, fromIndex) {\r\n\r\n      if (this == null) {\r\n        throw new TypeError('\"this\" is null or not defined');\r\n      }\r\n\r\n      // 1. Let O be ? ToObject(this value).\r\n      var o = Object(this);\r\n\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n\r\n      // 3. If len is 0, return false.\r\n      if (len === 0) {\r\n        return false;\r\n      }\r\n\r\n      // 4. Let n be ? ToInteger(fromIndex).\r\n      //    (If fromIndex is undefined, this step produces the value 0.)\r\n      var n = fromIndex | 0;\r\n\r\n      // 5. If n ≥ 0, then\r\n      //  a. Let k be n.\r\n      // 6. Else n < 0,\r\n      //  a. Let k be len + n.\r\n      //  b. If k < 0, let k be 0.\r\n      var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\r\n\r\n      function sameValueZero(x, y) {\r\n        return x === y || (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y));\r\n      }\r\n\r\n      // 7. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let elementK be the result of ? Get(O, ! ToString(k)).\r\n        // b. If SameValueZero(valueToFind, elementK) is true, return true.\r\n        if (sameValueZero(o[k], valueToFind)) {\r\n          return true;\r\n        }\r\n        // c. Increase k by 1.\r\n        k++;\r\n      }\r\n\r\n      // 8. Return false\r\n      return false;\r\n    }\r\n  });\r\n}\r\n\r\n// vivo x7 下网易云游戏 app 缺少 includes 方法\r\nif (!String.prototype.includes) {\r\n  String.prototype.includes = function(search, start) {\r\n    'use strict';\r\n    if (typeof start !== 'number') {\r\n      start = 0;\r\n    }\r\n    if (start + search.length > this.length) {\r\n      return false;\r\n    } else {\r\n      return this.indexOf(search, start) !== -1;\r\n    }\r\n  };\r\n}\r\n\r\n// vivo x7 下网易云游戏 app 缺少 find 方法\r\nif (!Array.prototype.find) {\r\n  Object.defineProperty(Array.prototype, 'find', {\r\n    value: function(predicate) {\r\n     // 1. Let O be ? ToObject(this value).\r\n      if (this == null) {\r\n        throw new TypeError('\"this\" is null or not defined');\r\n      }\r\n      var o = Object(this);\r\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n      var len = o.length >>> 0;\r\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n      if (typeof predicate !== 'function') {\r\n        throw new TypeError('predicate must be a function');\r\n      }\r\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n      var thisArg = arguments[1];\r\n      // 5. Let k be 0.\r\n      var k = 0;\r\n      // 6. Repeat, while k < len\r\n      while (k < len) {\r\n        // a. Let Pk be ! ToString(k).\r\n        // b. Let kValue be ? Get(O, Pk).\r\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n        // d. If testResult is true, return kValue.\r\n        var kValue = o[k];\r\n        if (predicate.call(thisArg, kValue, k, o)) {\r\n          return kValue;\r\n        }\r\n        // e. Increase k by 1.\r\n        k++;\r\n      }\r\n      // 7. Return undefined.\r\n      return void 0;\r\n    }\r\n  });\r\n}\r\n","/**\r\n * 判断是否是期望的类型\r\n * @param { unknown } param 将要判断的变量\r\n * @param { ...string } types 期望的类型\r\n * @return { boolean } 返回期望是否正确\r\n */\r\nexport const isExpectType = (param: unknown, ...types: string[]): boolean => {\r\n  return types.some(type => Object.prototype.toString.call(param).slice(8, -1).toLowerCase() === type)\r\n}\r\n\r\nexport const get = (data: object, strKeys: string) => {\r\n  const keys = strKeys.split('.')\r\n  for (let key of keys) {\r\n    const res = data[key]\r\n    if (!isExpectType(res, 'object', 'array')) return res\r\n    data = res\r\n  }\r\n  return data\r\n}\r\n\r\nexport const has = (data: object, key: string | number): boolean => {\r\n  return Object.prototype.hasOwnProperty.call(data, key)\r\n}\r\n\r\n/**\r\n * 移除\\n\r\n * @param { string } str 将要处理的字符串\r\n * @return { string } 返回新的字符串\r\n */\r\nexport const removeEnter = (str: string): string => {\r\n  return [].filter.call(str, s => s !== '\\n').join('')\r\n}\r\n\r\n/**\r\n * 把任何数据类型转成数字\r\n * @param num \r\n */\r\nexport const getNumber = (num: unknown): number => {\r\n  if (num === null) return 0\r\n  if (typeof num === 'object') return NaN\r\n  if (typeof num === 'number') return num\r\n  if (typeof num === 'string') {\r\n    if (num[num.length - 1] === '%') {\r\n      return Number(num.slice(0, -1)) / 100\r\n    }\r\n    return Number(num)\r\n  }\r\n  return NaN\r\n}\r\n\r\n/**\r\n * 判断颜色是否有效 (透明色 === 无效)\r\n * @param color 颜色\r\n */\r\nexport const hasBackground = (color: string | undefined | null): boolean => {\r\n  if (typeof color !== 'string') return false\r\n  color = color.toLocaleLowerCase().trim()\r\n  if (color === 'transparent') return false\r\n  if (/^rgba/.test(color)) {\r\n    const alpha = /([^\\s,]+)\\)$/.exec(color)\r\n    if (getNumber(alpha) === 0) return false\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * 通过padding计算\r\n * @return { object } block 边框信息\r\n */\r\nexport const computePadding = (\r\n  block: { padding?: string },\r\n  getLength: Function\r\n): [number, number, number, number] => {\r\n  let padding = block.padding?.split(' ').map(n => getLength(n)) || [0],\r\n    paddingTop = 0,\r\n    paddingBottom = 0,\r\n    paddingLeft = 0,\r\n    paddingRight = 0\r\n  switch (padding.length) {\r\n    case 1:\r\n      paddingTop = paddingBottom = paddingLeft = paddingRight = padding[0]\r\n      break\r\n    case 2:\r\n      paddingTop = paddingBottom = padding[0]\r\n      paddingLeft = paddingRight = padding[1]\r\n      break\r\n    case 3:\r\n      paddingTop = padding[0]\r\n      paddingLeft = paddingRight = padding[1]\r\n      paddingBottom = padding[2]\r\n      break\r\n    default:\r\n      paddingTop = padding[0]\r\n      paddingBottom = padding[1]\r\n      paddingLeft = padding[2]\r\n      paddingRight = padding[3]\r\n  }\r\n  // 检查是否单独传入值, 并且不是0\r\n  const res = { paddingTop, paddingBottom, paddingLeft, paddingRight }\r\n  for (let key in res) {\r\n    // 是否含有这个属性, 并且是数字或字符串\r\n    res[key] = has(block, key) && isExpectType(block[key], 'string', 'number')\r\n      ? getLength(block[key])\r\n      : res[key]\r\n  }\r\n  return [paddingTop, paddingBottom, paddingLeft, paddingRight]\r\n}\r\n\r\n/**\r\n * 节流函数\r\n * @param fn 将要处理的函数\r\n * @param wait 时间, 单位为毫秒\r\n * @returns 包装好的节流函数\r\n */\r\nexport const throttle = (fn: Function, wait = 300) => {\r\n  let timeId = null as any\r\n  return function (this: any, ...args: any[]) {\r\n    if (timeId) return\r\n    timeId = setTimeout(() => {\r\n      fn.apply(this, args)\r\n      clearTimeout(timeId)\r\n      timeId = null\r\n    }, wait)\r\n  }\r\n}\r\n\r\n/**\r\n * 通过概率计算出一个奖品索引\r\n * @param { Array<number | undefined> } rangeArr 概率\r\n * @returns { number } 中奖索引\r\n */\r\nexport const computeRange = (rangeArr: Array<number | undefined>): number => {\r\n  const ascendingArr: number[] = []\r\n  // 额外增加 map 来优化 ts 的类型推断\r\n  const sum = rangeArr.map(num => Number(num)).reduce((prev, curr) => {\r\n    if (curr > 0) { // 大于0\r\n      const res = prev + curr\r\n      ascendingArr.push(res)\r\n      return res\r\n    } else { // 小于等于0或NaN\r\n      ascendingArr.push(NaN)\r\n      return prev\r\n    }\r\n  }, 0)\r\n  const random = Math.random() * sum\r\n  return ascendingArr.findIndex(num => random <= num)\r\n}\r\n\r\n/**\r\n * 根据宽度分割字符串, 来达到换行的效果\r\n * @param text \r\n * @param maxWidth \r\n * @returns \r\n */\r\nexport const splitText = (\r\n  ctx: CanvasRenderingContext2D,\r\n  text: string,\r\n  getWidth: (lines: string[]) => number,\r\n  lineClamp: number = Infinity\r\n): string[] => {\r\n  // 如果 lineClamp 设置不正确, 则忽略该属性\r\n  if (lineClamp <= 0) lineClamp = Infinity\r\n  let str = ''\r\n  const lines = []\r\n  const EndWidth = ctx.measureText('...').width\r\n  for (let i = 0; i < text.length; i++) {\r\n    str += text[i]\r\n    let currWidth = ctx.measureText(str).width\r\n    const maxWidth = getWidth(lines)\r\n    // 如果正在计算最后一行, 则加上三个小点的宽度\r\n    if (lineClamp === lines.length + 1) currWidth += EndWidth\r\n    // 如果已经没有宽度了, 就没有必要再计算了\r\n    if (maxWidth < 0) return lines\r\n    // 如果当前一行的宽度不够了, 则处理下一行\r\n    if (currWidth > maxWidth) {\r\n      lines.push(str.slice(0, -1))\r\n      str = text[i]\r\n    }\r\n    // 如果现在是最后一行, 则加上三个小点并跳出\r\n    if (lineClamp === lines.length) {\r\n      lines[lines.length - 1] += '...'\r\n      return lines\r\n    }\r\n  }\r\n  if (str) lines.push(str)\r\n  if (!lines.length) lines.push(text)\r\n  return lines\r\n}\r\n\r\n// 获取一个重新排序的数组\r\nexport const getSortedArrayByIndex = <T>(arr: T[], order: number[]): T[] => {\r\n  const map: { [key: number]: T } = {}, res = []\r\n  for (let i = 0; i < arr.length; i++) {\r\n    map[i] = arr[i]\r\n  }\r\n  for (let i = 0; i < order.length; i++) {\r\n    const curr = map[order[i]]\r\n    if (curr) (res[i] = curr)\r\n  }\r\n  return res\r\n}\r\n","import Watcher from './watcher'\r\n\r\nexport default class Dep {\r\n  static target: Watcher | null\r\n  private subs: Array<Watcher>\r\n\r\n  /**\r\n   * 订阅中心构造器\r\n   */\r\n  constructor () {\r\n    this.subs = []\r\n  }\r\n\r\n  /**\r\n   * 收集依赖\r\n   * @param {*} sub \r\n   */\r\n  public addSub (sub: Watcher) {\r\n    // 此处临时使用includes防重复添加\r\n    if (!this.subs.includes(sub)) {\r\n      this.subs.push(sub)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 派发更新\r\n   */\r\n  public notify () {\r\n    this.subs.forEach(sub => {\r\n      sub.update()\r\n    })\r\n  }\r\n}\r\n","\r\nimport { isExpectType } from '../utils'\r\n\r\nexport const hasProto = '__proto__' in {}\r\n\r\nexport function def (obj: object, key: string | number, val: any, enumerable?: boolean) {\r\n  Object.defineProperty(obj, key, {\r\n    value: val,\r\n    enumerable: !!enumerable,\r\n    writable: true,\r\n    configurable: true\r\n  })\r\n}\r\n\r\nexport function parsePath (path: string) {\r\n  path += '.'\r\n  let segments: string[] = [], segment = ''\r\n  for (let i = 0; i < path.length; i++) {\r\n    let curr = path[i]\r\n    if (/\\[|\\./.test(curr)) {\r\n      segments.push(segment)\r\n      segment = ''\r\n    } else if (/\\W/.test(curr)) {\r\n      continue\r\n    } else {\r\n      segment += curr\r\n    }\r\n  }\r\n  return function (data: object | any[]) {\r\n    return segments.reduce((data, key) => {\r\n      return data[key]\r\n    }, data)\r\n  }\r\n}\r\n\r\nexport function traverse (value: any) {\r\n  // const seenObjects = new Set()\r\n  const dfs = (data: any) => {\r\n    if (!isExpectType(data, 'array', 'object')) return\r\n    Object.keys(data).forEach(key => {\r\n      const value = data[key]\r\n      dfs(value)\r\n    })\r\n  }\r\n  dfs(value)\r\n  // seenObjects.clear()\r\n}","/**\r\n * 重写数组的原型方法\r\n */\r\nconst oldArrayProto = Array.prototype\r\nconst newArrayProto = Object.create(oldArrayProto)\r\nconst methods = ['push', 'pop', 'shift', 'unshift', 'sort', 'splice', 'reverse']\r\nmethods.forEach(method => {\r\n  newArrayProto[method] = function (...args: any[]) {\r\n    const res = oldArrayProto[method].apply(this, args)\r\n    const luckyOb = this['__luckyOb__']\r\n    if (['push', 'unshift', 'splice'].includes(method)) luckyOb.walk(this)\r\n    luckyOb.dep.notify()\r\n    return res\r\n  }\r\n})\r\n\r\nexport { newArrayProto }\r\n","import Dep from './dep'\r\nimport { hasProto, def } from './utils'\r\nimport { newArrayProto } from './array'\r\n\r\nexport default class Observer {\r\n  value: any\r\n  dep: Dep\r\n\r\n  /**\r\n   * 观察者构造器\r\n   * @param value \r\n   */\r\n  constructor (value: any) {\r\n    // this.value = value\r\n    this.dep = new Dep()\r\n    // 将响应式对象代理到当前value上面, 并且将当前的enumerable设置为false\r\n    def(value, '__luckyOb__', this)\r\n    if (Array.isArray(value)) { // 如果是数组, 则重写原型方法\r\n      if (hasProto) {\r\n        value['__proto__'] = newArrayProto\r\n      } else {\r\n        Object.getOwnPropertyNames(newArrayProto).forEach(key => {\r\n          def(value, key, newArrayProto[key])\r\n        })\r\n      }\r\n    }\r\n    this.walk(value)\r\n  }\r\n\r\n  walk (data: object | any[]) {\r\n    Object.keys(data).forEach(key => {\r\n      defineReactive(data, key, data[key])\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * 处理响应式\r\n * @param { Object | Array } data\r\n */\r\nexport function observe (data: any): Observer | void {\r\n  if (!data || typeof data !== 'object') return\r\n  let luckyOb: Observer | void\r\n  if ('__luckyOb__' in data) {\r\n    luckyOb = data['__luckyOb__']\r\n  } else {\r\n    luckyOb = new Observer(data)\r\n  }\r\n  return luckyOb\r\n}\r\n\r\n/**\r\n * 重写 setter / getter\r\n * @param {*} data \r\n * @param {*} key \r\n * @param {*} val \r\n */\r\nexport function defineReactive (data: any, key: string | number, val: any) {\r\n  const dep = new Dep()\r\n  const property = Object.getOwnPropertyDescriptor(data, key)\r\n  if (property && property.configurable === false) {\r\n    return\r\n  }\r\n  const getter = property && property.get\r\n  const setter = property && property.set\r\n  if ((!getter || setter) && arguments.length === 2) {\r\n    val = data[key]\r\n  }\r\n  let childOb = observe(val)\r\n  Object.defineProperty(data, key, {\r\n    get: () => {\r\n      const value = getter ? getter.call(data) : val\r\n      if (Dep.target) {\r\n        dep.addSub(Dep.target)\r\n        if (childOb) {\r\n          childOb.dep.addSub(Dep.target)\r\n        }\r\n      }\r\n      return value\r\n    },\r\n    set: (newVal) => {\r\n      if (newVal === val) return\r\n      val = newVal\r\n      if (getter && !setter) return\r\n      if (setter) {\r\n        setter.call(data, newVal)\r\n      } else {\r\n        val = newVal\r\n      }\r\n      childOb = observe(newVal)\r\n      dep.notify()\r\n    }\r\n  })\r\n}\r\n","import Lucky from '../lib/lucky'\r\nimport Dep from './dep'\r\nimport { parsePath, traverse } from './utils'\r\n\r\nexport interface WatchOptType {\r\n  handler?: () => Function\r\n  immediate?: boolean\r\n  deep?: boolean\r\n}\r\n\r\nlet uid = 0\r\nexport default class Watcher {\r\n  id: number\r\n  $lucky: Lucky\r\n  expr: string | Function\r\n  cb: Function\r\n  deep: boolean\r\n  getter: Function\r\n  value: any\r\n\r\n  /**\r\n   * 观察者构造器\r\n   * @param {*} $lucky \r\n   * @param {*} expr \r\n   * @param {*} cb \r\n   */\r\n  constructor ($lucky: Lucky, expr: string | Function, cb: Function, options: WatchOptType = {}) {\r\n    this.id = uid++\r\n    this.$lucky = $lucky\r\n    this.expr = expr\r\n    this.deep = !!options.deep\r\n    if (typeof expr === 'function') {\r\n      this.getter = expr\r\n    } else {\r\n      this.getter = parsePath(expr)\r\n    }\r\n    this.cb = cb\r\n    this.value = this.get()\r\n  }\r\n\r\n  /**\r\n   * 根据表达式获取新值\r\n   */\r\n  get () {\r\n    Dep.target = this\r\n    const value = this.getter.call(this.$lucky, this.$lucky)\r\n    // 处理深度监听\r\n    if (this.deep) {\r\n      traverse(value)\r\n    }\r\n    Dep.target = null\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * 触发 watcher 更新\r\n   */\r\n  update () {\r\n    // get获取新值\r\n    const newVal = this.get()\r\n    // 读取之前存储的旧值\r\n    const oldVal = this.value\r\n    this.value = newVal\r\n    // 触发 watch 回调\r\n    this.cb.call(this.$lucky, newVal, oldVal)\r\n  }\r\n}\r\n","import '../utils/polyfill'\r\nimport { has, isExpectType, throttle } from '../utils/index'\r\nimport { name, version } from '../../package.json'\r\nimport { ConfigType, UserConfigType, ImgItemType, ImgType, Tuple } from '../types/index'\r\nimport { defineReactive } from '../observer'\r\nimport Watcher, { WatchOptType } from '../observer/watcher'\r\n\r\nexport default class Lucky {\r\n  static version: string = version\r\n  protected readonly version: string = version\r\n  protected readonly config: ConfigType\r\n  protected readonly ctx: CanvasRenderingContext2D\r\n  protected htmlFontSize: number = 16\r\n  protected rAF: Function = function () {}\r\n  protected boxWidth: number = 0\r\n  protected boxHeight: number = 0\r\n  protected data: {\r\n    width: string | number,\r\n    height: string | number\r\n  }\r\n\r\n  /**\r\n   * 公共构造器\r\n   * @param config\r\n   */\r\n  constructor (\r\n    config: string | HTMLDivElement | UserConfigType,\r\n    data: {\r\n      width: string | number,\r\n      height: string | number\r\n    }\r\n  ) {\r\n    // 兼容代码开始: 为了处理 v1.0.6 版本在这里传入了一个 dom\r\n    if (typeof config === 'string') config = { el: config } as UserConfigType\r\n    else if (config.nodeType === 1) config = { el: '', divElement: config } as UserConfigType\r\n    // 这里先野蛮的处理, 等待后续优化, 对外暴露的类型是UserConfigType, 但内部期望是ConfigType\r\n    config = config as UserConfigType\r\n    this.config = config as ConfigType\r\n    this.data = data\r\n    // 开始初始化\r\n    if (!config.flag) config.flag = 'WEB'\r\n    if (config.el) config.divElement = document.querySelector(config.el) as HTMLDivElement\r\n    // 如果存在父盒子, 就创建canvas标签\r\n    if (config.divElement) {\r\n      // 无论盒子内有没有canvas都执行覆盖逻辑\r\n      config.canvasElement = document.createElement('canvas')\r\n      config.divElement.appendChild(config.canvasElement)\r\n    }\r\n    // 获取 canvas 上下文\r\n    if (config.canvasElement) {\r\n      config.ctx = config.canvasElement.getContext('2d')!\r\n      // 添加版本信息到标签上, 方便定位版本问题\r\n      config.canvasElement.setAttribute('package', `${name}@${version}`)\r\n      config.canvasElement.addEventListener('click', e => this.handleClick(e))\r\n    }\r\n    this.ctx = config.ctx as CanvasRenderingContext2D\r\n    // 初始化 window 方法\r\n    this.initWindowFunction()\r\n    // 如果最后得不到 canvas 上下文那就无法进行绘制\r\n    if (!this.config.ctx) {\r\n      console.error('无法获取到 CanvasContext2D')\r\n    }\r\n    // 监听 window 触发 resize 时重置\r\n    if (window && typeof window.addEventListener === 'function') {\r\n      window.addEventListener('resize', throttle(() => this.resize(), 300))\r\n    }\r\n    // 监听异步设置 html 的 fontSize 并重新绘制\r\n    if (window && typeof window.MutationObserver === 'function') {\r\n      new window.MutationObserver(() => {\r\n        this.resize()\r\n      }).observe(document.documentElement, { attributes: true })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 初始化组件大小/单位\r\n   */\r\n  protected resize(): void {\r\n    this.config.beforeResize?.()\r\n    // 先初始化 fontSize 以防后面有 rem 单位\r\n    this.setHTMLFontSize()\r\n    // 拿到 config 即可设置 dpr\r\n    this.setDpr()\r\n    // 初始化宽高\r\n    this.resetWidthAndHeight()\r\n    // 根据 dpr 来缩放 canvas\r\n    this.zoomCanvas()\r\n  }\r\n\r\n  /**\r\n   * 初始化方法\r\n   */\r\n  protected initLucky () {\r\n    this.resize()\r\n    if (!this.boxWidth || !this.boxHeight) {\r\n      return console.error('无法获取到宽度或高度')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 鼠标点击事件\r\n   * @param e 事件参数\r\n   */\r\n  protected handleClick (e: MouseEvent): void {}\r\n\r\n  /**\r\n   * 根标签的字体大小\r\n   */\r\n  protected setHTMLFontSize (): void {\r\n    if (!window) return\r\n    this.htmlFontSize = +window.getComputedStyle(document.documentElement).fontSize.slice(0, -2)\r\n  }\r\n\r\n  // 清空画布\r\n  public clearCanvas (): void {\r\n    const [width, height] = [this.boxWidth, this.boxHeight]\r\n    this.ctx.clearRect(-width, -height, width * 2, height * 2)\r\n  }\r\n\r\n  /**\r\n   * 设备像素比\r\n   * window 环境下自动获取, 其余环境手动传入\r\n   */\r\n  protected setDpr (): void {\r\n    const { config } = this\r\n    if (config.dpr) {\r\n      // 优先使用 config 传入的 dpr\r\n    } else if (window) {\r\n      window['dpr'] = config.dpr = window.devicePixelRatio || 1\r\n    } else if (!config.dpr) {\r\n      console.error(config, '未传入 dpr 可能会导致绘制异常')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 重置盒子和canvas的宽高\r\n   */\r\n  private resetWidthAndHeight (): void {\r\n    const { config, data } = this\r\n    // 如果是浏览器环境并且存在盒子\r\n    let boxWidth = 0, boxHeight = 0\r\n    if (config.divElement) {\r\n      boxWidth = config.divElement.offsetWidth\r\n      boxHeight = config.divElement.offsetHeight\r\n    }\r\n    // 先从 data 里取宽高, 如果 config 上面没有, 就从 style 上面取\r\n    this.boxWidth = this.getLength(data.width || config['width']) || boxWidth\r\n    this.boxHeight = this.getLength(data.height || config['height']) || boxHeight\r\n    // 重新把宽高赋给盒子\r\n    if (config.divElement) {\r\n      config.divElement.style.overflow = 'hidden'\r\n      config.divElement.style.width = this.boxWidth + 'px'\r\n      config.divElement.style.height = this.boxHeight + 'px'\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 根据 dpr 缩放 canvas 并处理位移\r\n   */\r\n  protected zoomCanvas (): void {\r\n    const { config, ctx } = this\r\n    const { canvasElement, dpr } = config\r\n    const [width, height] = [this.boxWidth * dpr, this.boxHeight * dpr]\r\n    if (!canvasElement) return\r\n    canvasElement.width = width\r\n    canvasElement.height = height\r\n    canvasElement.style.width = `${width}px`\r\n    canvasElement.style.height = `${height}px`\r\n    canvasElement.style['transform-origin'] = 'left top'\r\n    canvasElement.style.transform = `scale(${1 / dpr})`\r\n    ctx.scale(dpr, dpr)\r\n  }\r\n\r\n  /**\r\n   * 从 window 对象上获取一些方法\r\n   */\r\n  private initWindowFunction (): void {\r\n    const { config } = this\r\n    if (window) {\r\n      this.rAF = window.requestAnimationFrame ||\r\n        window['webkitRequestAnimationFrame'] ||\r\n        window['mozRequestAnimationFrame'] ||\r\n        function (callback: Function) {\r\n          window.setTimeout(callback, 1000 / 60)\r\n        }\r\n      config.setTimeout = window.setTimeout\r\n      config.setInterval = window.setInterval\r\n      config.clearTimeout = window.clearTimeout\r\n      config.clearInterval = window.clearInterval\r\n      return\r\n    }\r\n    if (config.rAF) {\r\n      // 优先使用帧动画\r\n      this.rAF = config.rAF\r\n    } else if (config.setTimeout) {\r\n      // 其次使用定时器\r\n      const timeout = config.setTimeout\r\n      this.rAF = (callback: Function): number => timeout(callback, 16.7)\r\n    } else {\r\n      // 如果config里面没有提供, 那就假设全局方法存在setTimeout\r\n      this.rAF = (callback: Function): number => setTimeout(callback, 16.7)\r\n    }\r\n  }\r\n\r\n  public isWeb () {\r\n    return ['WEB', 'UNI-H5', 'TARO-H5'].includes(this.config.flag)\r\n  }\r\n\r\n  /**\r\n   * 异步加载图片并返回图片的几何信息\r\n   * @param src 图片路径\r\n   * @param info 图片信息\r\n   */\r\n  protected loadImg (\r\n    src: string,\r\n    info: ImgItemType,\r\n    resolveName = '$resolve'\r\n  ): Promise<ImgType> {\r\n    return new Promise((resolve, reject) => {\r\n      if (!src) reject(`=> '${info.src}' 不能为空或不合法`)\r\n      if (this.config.flag === 'WEB') {\r\n        let imgObj = new Image()\r\n        imgObj['crossorigin'] = 'anonymous'\r\n        imgObj.onload = () => resolve(imgObj)\r\n        imgObj.onerror = () => reject(`=> '${info.src}' 图片加载失败`)\r\n        imgObj.src = src\r\n      } else {\r\n        // 其余平台向外暴露, 交给外部自行处理\r\n        info[resolveName] = resolve\r\n        info['$reject'] = reject\r\n        return\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 公共绘制图片的方法\r\n   * @param imgObj 图片对象\r\n   * @param rectInfo: [x轴位置, y轴位置, 渲染宽度, 渲染高度] \r\n   */\r\n  protected drawImage(\r\n    ctx: CanvasRenderingContext2D,\r\n    imgObj: ImgType,\r\n    ...rectInfo: [...Tuple<number, 4>, ...Partial<Tuple<number, 4>>]\r\n  ): void {\r\n    let drawImg\r\n    const { flag, dpr } = this.config\r\n    if (['WEB', 'MP-WX'].includes(flag)) {\r\n      // 浏览器和新版小程序中直接绘制即可\r\n      drawImg = imgObj\r\n    } else if (['UNI-H5', 'UNI-MP', 'TARO-H5', 'TARO-MP'].includes(flag)) {\r\n      // 旧版本的小程序需要绘制 path, 这里特殊处理一下\r\n      type OldImageType = ImgType & { path: CanvasImageSource }\r\n      drawImg = (imgObj as OldImageType).path\r\n    } else {\r\n      // 如果传入了未知的标识\r\n      return console.error('意料之外的 flag, 该平台尚未兼容!')\r\n    }\r\n    const miniProgramOffCtx = (drawImg['canvas'] || drawImg).getContext?.('2d')\r\n    if (miniProgramOffCtx && !this.isWeb()) {\r\n      rectInfo = rectInfo.map(val => val! * dpr) as Tuple<number, 8>\r\n      const temp = miniProgramOffCtx.getImageData(...rectInfo.slice(0, 4))\r\n      ctx.putImageData(temp, ...(rectInfo.slice(4, 6) as Tuple<number, 2>))\r\n    } else {\r\n      if (rectInfo.length === 8) {\r\n        rectInfo = rectInfo.map((val, index) => index < 4 ? val! * dpr : val) as Tuple<number, 8>\r\n      }\r\n      // 尝试捕获错误\r\n      try {\r\n        ctx.drawImage(drawImg, ...rectInfo as Tuple<number, 8>)\r\n      } catch (err) {\r\n        /**\r\n         * TODO: safari浏览器下, init() 会出现奇怪的报错\r\n         * IndexSizeError: The index is not in the allowed range\r\n         * 但是这个报错并不影响实际的绘制, 目前先放一放, 等待有缘人\r\n         */\r\n        // console.log(err)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 计算图片的渲染宽高\r\n   * @param imgObj 图片标签元素\r\n   * @param imgInfo 图片信息\r\n   * @param maxWidth 最大宽度\r\n   * @param maxHeight 最大高度\r\n   * @return [渲染宽度, 渲染高度]\r\n   */\r\n  protected computedWidthAndHeight (\r\n    imgObj: ImgType,\r\n    imgInfo: ImgItemType,\r\n    maxWidth: number,\r\n    maxHeight: number\r\n  ): [number, number] {\r\n    // 根据配置的样式计算图片的真实宽高\r\n    if (!imgInfo.width && !imgInfo.height) {\r\n      // 如果没有配置宽高, 则使用图片本身的宽高\r\n      return [imgObj.width, imgObj.height]\r\n    } else if (imgInfo.width && !imgInfo.height) {\r\n      // 如果只填写了宽度, 没填写高度\r\n      let trueWidth = this.getLength(imgInfo.width, maxWidth)\r\n      // 那高度就随着宽度进行等比缩放\r\n      return [trueWidth, imgObj.height * (trueWidth / imgObj.width)]\r\n    } else if (!imgInfo.width && imgInfo.height) {\r\n      // 如果只填写了宽度, 没填写高度\r\n      let trueHeight = this.getLength(imgInfo.height, maxHeight)\r\n      // 那宽度就随着高度进行等比缩放\r\n      return [imgObj.width * (trueHeight / imgObj.height), trueHeight]\r\n    }\r\n    // 如果宽度和高度都填写了, 就如实计算\r\n    return [\r\n      this.getLength(imgInfo.width, maxWidth),\r\n      this.getLength(imgInfo.height, maxHeight)\r\n    ]\r\n  }\r\n\r\n  /**\r\n   * 转换单位\r\n   * @param { string } value 将要转换的值\r\n   * @param { number } denominator 分子\r\n   * @return { number } 返回新的字符串\r\n   */\r\n  protected changeUnits (value: string, denominator = 1): number {\r\n    const { config } = this\r\n    return Number(value.replace(/^([-]*[0-9.]*)([a-z%]*)$/, (val, num, unit) => {\r\n      const handleCssUnit = {\r\n        '%': (n: number) => n * (denominator / 100),\r\n        'px': (n: number) => n * 1,\r\n        'rem': (n: number) => n * this.htmlFontSize,\r\n        'vw': (n: number) => n / 100 * window.innerWidth,\r\n      }[unit]\r\n      if (handleCssUnit) return handleCssUnit(num)\r\n      // 如果找不到默认单位, 就交给外面处理\r\n      const otherHandleCssUnit = config.handleCssUnit || config['unitFunc']\r\n      return otherHandleCssUnit ? otherHandleCssUnit(num, unit) : num\r\n    }))\r\n  }\r\n\r\n  /**\r\n   * 获取长度\r\n   * @param length 将要转换的长度\r\n   * @param maxLength 最大长度\r\n   * @return 返回长度\r\n   */\r\n  protected getLength (length: string | number | undefined, maxLength?: number): number {\r\n    if (isExpectType(length, 'number')) return length as number\r\n    if (isExpectType(length, 'string')) return this.changeUnits(length as string, maxLength)\r\n    return 0\r\n  }\r\n\r\n  /**\r\n   * 获取相对(居中)X坐标\r\n   * @param width\r\n   * @param col\r\n   */\r\n  protected getOffsetX (width: number, maxWidth: number = 0): number {\r\n    return (maxWidth - width) / 2\r\n  }\r\n\r\n  protected getOffscreenCanvas (width: number, height: number): {\r\n    _offscreenCanvas: HTMLCanvasElement,\r\n    _ctx: CanvasRenderingContext2D\r\n  } | void {\r\n    if (!has(this, '_offscreenCanvas')) {\r\n      if (window && window.document && this.config.flag === 'WEB') {\r\n        this['_offscreenCanvas'] = document.createElement('canvas')\r\n      } else {\r\n        this['_offscreenCanvas'] = this.config['offscreenCanvas']\r\n      }\r\n      if (!this['_offscreenCanvas']) return console.error('离屏 Canvas 无法渲染!')\r\n    }\r\n    const dpr = this.config.dpr\r\n    const _offscreenCanvas = this['_offscreenCanvas'] as HTMLCanvasElement\r\n    _offscreenCanvas.width = (width || 300) * dpr\r\n    _offscreenCanvas.height = (height || 150) * dpr\r\n    const _ctx = _offscreenCanvas.getContext('2d')!\r\n    _ctx.clearRect(0, 0, width, height)\r\n    _ctx.scale(dpr, dpr)\r\n    _ctx['dpr'] = dpr\r\n    return { _offscreenCanvas, _ctx }\r\n  }\r\n\r\n  /**\r\n   * 添加一个新的响应式数据 (临时)\r\n   * @param data 数据\r\n   * @param key 属性\r\n   * @param value 新值\r\n   */\r\n  public $set (data: object, key: string | number, value: any) {\r\n    if (!data || typeof data !== 'object') return\r\n    defineReactive(data, key, value)\r\n  }\r\n\r\n  /**\r\n   * 添加一个属性计算 (临时)\r\n   * @param data 源数据\r\n   * @param key 属性名\r\n   * @param callback 回调函数\r\n   */\r\n  protected $computed (data: object, key: string, callback: Function) {\r\n    Object.defineProperty(data, key, {\r\n      get: () => {\r\n        return callback.call(this)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 添加一个观察者 create user watcher\r\n   * @param expr 表达式\r\n   * @param handler 回调函数\r\n   * @param watchOpt 配置参数\r\n   * @return 卸载当前观察者的函数 (暂未返回)\r\n   */\r\n  protected $watch (\r\n    expr: string | Function,\r\n    handler: Function | WatchOptType,\r\n    watchOpt: WatchOptType = {}\r\n  ): Function {\r\n    if (typeof handler === 'object') {\r\n      watchOpt = handler\r\n      handler = watchOpt.handler!\r\n    }\r\n    // 创建 user watcher\r\n    const watcher = new Watcher(this, expr, handler, watchOpt)\r\n    // 判断是否需要初始化时触发回调\r\n    if (watchOpt.immediate) {\r\n      handler.call(this, watcher.value)\r\n    }\r\n    // 返回一个卸载当前观察者的函数\r\n    return function unWatchFn () {}\r\n  }\r\n}\r\n","/**\r\n * 转换为运算角度\r\n * @param { number } deg 数学角度\r\n * @return { number } 运算角度\r\n */\r\nexport const getAngle = (deg: number): number => {\r\n  return Math.PI / 180 * deg\r\n}\r\n\r\n/**\r\n * 根据角度计算圆上的点\r\n * @param { number } deg 运算角度\r\n * @param { number } r 半径\r\n * @return { Array<number> } 坐标[x, y]\r\n */\r\nexport const getArcPointerByDeg = (deg: number, r: number): [number, number] => {\r\n  return [+(Math.cos(deg) * r).toFixed(8), +(Math.sin(deg) * r).toFixed(8)]\r\n}\r\n\r\n/**\r\n * 根据点计算切线方程\r\n * @param { number } x 横坐标\r\n * @param { number } y 纵坐标\r\n * @return { Array<number> } [斜率, 常数]\r\n */\r\nexport const getTangentByPointer = (x: number, y: number): Array<number> => {\r\n  let k = - x / y\r\n  let b = -k * x + y\r\n  return [k, b]\r\n}\r\n\r\n// 使用 arc 绘制扇形\r\nexport const fanShapedByArc = (\r\n  ctx: CanvasRenderingContext2D,\r\n  minRadius: number,\r\n  maxRadius: number,\r\n  start: number,\r\n  end: number,\r\n  gutter: number,\r\n): void => {\r\n  ctx.beginPath()\r\n  let maxGutter = getAngle(90 / Math.PI / maxRadius * gutter)\r\n  let minGutter = getAngle(90 / Math.PI / minRadius * gutter)\r\n  let maxStart = start + maxGutter\r\n  let maxEnd = end - maxGutter\r\n  let minStart = start + minGutter\r\n  let minEnd = end - minGutter\r\n  ctx.arc(0, 0, maxRadius, maxStart, maxEnd, false)\r\n  // 如果 getter 比按钮短就绘制圆弧, 反之计算新的坐标点\r\n  // if (minEnd > minStart) {\r\n  //   ctx.arc(0, 0, minRadius, minEnd, minStart, true)\r\n  // } else {\r\n    ctx.lineTo(\r\n      ...getArcPointerByDeg(\r\n        (start + end) / 2,\r\n        gutter / 2 / Math.abs(Math.sin((start - end) / 2))\r\n      )\r\n    )\r\n  // }\r\n  ctx.closePath()\r\n}\r\n\r\n// 使用 arc 绘制圆角矩形\r\nexport const roundRectByArc = (\r\n  ctx: CanvasRenderingContext2D,\r\n  ...[x, y, w, h, r]: number[]\r\n) => {\r\n  const min = Math.min(w, h), PI = Math.PI\r\n  if (r > min / 2) r = min / 2\r\n  ctx.beginPath()\r\n  ctx.moveTo(x + r, y)\r\n  ctx.lineTo(x + r, y)\r\n  ctx.lineTo(x + w - r, y)\r\n  ctx.arc(x + w - r, y + r, r, -PI / 2, 0)\r\n  ctx.lineTo(x + w, y + h - r)\r\n  ctx.arc(x + w - r, y + h - r, r, 0, PI / 2)\r\n  ctx.lineTo(x + r, y + h)\r\n  ctx.arc(x + r, y + h - r, r, PI / 2, PI)\r\n  ctx.lineTo(x, y + r)\r\n  ctx.arc(x + r, y + r, r, PI, -PI / 2)\r\n  ctx.closePath()\r\n}\r\n\r\n/**\r\n * 创建线性渐变色\r\n */\r\nexport const getLinearGradient = (\r\n  ctx: CanvasRenderingContext2D,\r\n  x: number,\r\n  y: number,\r\n  w: number,\r\n  h: number,\r\n  background: string\r\n) => {\r\n  const context = (/linear-gradient\\((.+)\\)/.exec(background) as Array<any>)[1]\r\n    .split(',') // 根据逗号分割\r\n    .map((text: string) => text.trim()) // 去除两边空格\r\n  let deg = context.shift(), direction: [number, number, number, number] = [0, 0, 0, 0]\r\n  // 通过起始点和角度计算渐变终点的坐标点, 这里感谢泽宇大神提醒我使用勾股定理....\r\n  if (deg.includes('deg')) {\r\n    deg = deg.slice(0, -3) % 360\r\n    // 根据4个象限定义起点坐标, 根据45度划分8个区域计算终点坐标\r\n    const getLenOfTanDeg = (deg: number) => Math.tan(deg / 180 * Math.PI)\r\n    if (deg >= 0 && deg < 45) direction = [x, y + h, x + w, y + h - w * getLenOfTanDeg(deg - 0)]\r\n    else if (deg >= 45 && deg < 90) direction = [x, y + h, (x + w) - h * getLenOfTanDeg(deg - 45), y]\r\n    else if (deg >= 90 && deg < 135) direction = [x + w, y + h, (x + w) - h * getLenOfTanDeg(deg - 90), y]\r\n    else if (deg >= 135 && deg < 180) direction = [x + w, y + h, x, y + w * getLenOfTanDeg(deg - 135)]\r\n    else if (deg >= 180 && deg < 225) direction = [x + w, y, x, y + w * getLenOfTanDeg(deg - 180)]\r\n    else if (deg >= 225 && deg < 270) direction = [x + w, y, x + h * getLenOfTanDeg(deg - 225), y + h]\r\n    else if (deg >= 270 && deg < 315) direction = [x, y, x + h * getLenOfTanDeg(deg - 270), y + h]\r\n    else if (deg >= 315 && deg < 360) direction = [x, y, x + w, y + h - w * getLenOfTanDeg(deg - 315)]\r\n  }\r\n  // 创建四个简单的方向坐标\r\n  else if (deg.includes('top')) direction = [x, y + h, x, y]\r\n  else if (deg.includes('bottom')) direction = [x, y, x, y + h]\r\n  else if (deg.includes('left')) direction = [x + w, y, x, y]\r\n  else if (deg.includes('right')) direction = [x, y, x + w, y]\r\n  // 创建线性渐变必须使用整数坐标\r\n  const gradient = ctx.createLinearGradient(...(direction.map(n => n >> 0) as typeof direction))\r\n  // 这里后期重构, 先用any代替\r\n  return context.reduce((gradient: any, item: any, index: any) => {\r\n    const info = item.split(' ')\r\n    if (info.length === 1) gradient.addColorStop(index, info[0])\r\n    else if (info.length === 2) gradient.addColorStop(...info)\r\n    return gradient\r\n  }, gradient)\r\n}\r\n\r\n// // 根据三点画圆弧\r\n// export const drawRadian = (\r\n//   ctx: CanvasRenderingContext2D,\r\n//   r: number,\r\n//   start: number,\r\n//   end: number,\r\n//   direction: boolean = true\r\n// ) => {\r\n//   // 如果角度大于等于180度, 则分两次绘制, 因为 arcTo 无法绘制180度的圆弧\r\n//   if (Math.abs(end - start).toFixed(8) >= getAngle(180).toFixed(8)) {\r\n//     let middle = (end + start) / 2\r\n//     if (direction) {\r\n//       drawRadian(ctx, r, start, middle, direction)\r\n//       drawRadian(ctx, r, middle, end, direction)\r\n//     } else {\r\n//       drawRadian(ctx, r, middle, end, direction)\r\n//       drawRadian(ctx, r, start, middle, direction)\r\n//     }\r\n//     return false\r\n//   }\r\n//   // 如果方法相反, 则交换起点和终点\r\n//   if (!direction) [start, end] = [end, start]\r\n//   const [x1, y1] = getArcPointerByDeg(start, r)\r\n//   const [x2, y2] = getArcPointerByDeg(end, r)\r\n//   const [k1, b1] = getTangentByPointer(x1, y1)\r\n//   const [k2, b2] = getTangentByPointer(x2, y2)\r\n//   // 计算两条切线的交点\r\n//   let x0 = (b2 - b1) / (k1 - k2)\r\n//   let y0 = (k2 * b1 - k1 * b2) / (k2 - k1)\r\n//   // 如果有任何一条切线垂直于x轴, 则斜率不存在\r\n//   if (isNaN(x0)) {\r\n//     Math.abs(x1) === +r.toFixed(8) && (x0 = x1)\r\n//     Math.abs(x2) === +r.toFixed(8) && (x0 = x2)\r\n//   }\r\n//   if (k1 === Infinity || k1 === -Infinity) {\r\n//     y0 = k2 * x0 + b2\r\n//   }\r\n//   else if (k2 === Infinity || k2 === -Infinity) {\r\n//     y0 = k1 * x0 + b1\r\n//   }\r\n//   ctx.lineTo(x1, y1)\r\n//   // 微信小程序下 arcTo 在安卓真机下绘制有 bug\r\n//   ctx.arcTo(x0, y0, x2, y2, r)\r\n// }\r\n\r\n// // 使用 arcTo 绘制扇形 (弃用)\r\n// export const drawSectorByArcTo = (\r\n//   ctx: CanvasRenderingContext2D,\r\n//   minRadius: number,\r\n//   maxRadius: number,\r\n//   start: number,\r\n//   end: number,\r\n//   gutter: number,\r\n// ) => {\r\n//   if (!minRadius) minRadius = gutter\r\n//   // 内外圆弧分别进行等边缩放\r\n//   let maxGutter = getAngle(90 / Math.PI / maxRadius * gutter)\r\n//   let minGutter = getAngle(90 / Math.PI / minRadius * gutter)\r\n//   let maxStart = start + maxGutter\r\n//   let maxEnd = end - maxGutter\r\n//   let minStart = start + minGutter\r\n//   let minEnd = end - minGutter\r\n//   ctx.beginPath()\r\n//   ctx.moveTo(...getArcPointerByDeg(maxStart, maxRadius))\r\n//   drawRadian(ctx, maxRadius, maxStart, maxEnd, true)\r\n//   // 如果 getter 比按钮短就绘制圆弧, 反之计算新的坐标点\r\n//   if (minEnd > minStart) {\r\n//     drawRadian(ctx, minRadius, minStart, minEnd, false)\r\n//   } else {\r\n//     ctx.lineTo(\r\n//       ...getArcPointerByDeg(\r\n//         (start + end) / 2,\r\n//         gutter / 2 / Math.abs(Math.sin((start - end) / 2))\r\n//       )\r\n//     )\r\n//   }\r\n//   ctx.closePath()\r\n// }\r\n\r\n// // 使用 arcTo 绘制圆角矩形 (弃用)\r\n// export const roundRectByArcTo = (\r\n//   ctx: CanvasRenderingContext2D,\r\n//   ...[x, y, w, h, r]: number[]\r\n// ) => {\r\n//   let min = Math.min(w, h)\r\n//   if (r > min / 2) r = min / 2\r\n//   ctx.beginPath()\r\n//   ctx.moveTo(x + r, y)\r\n//   ctx.lineTo(x + r, y)\r\n//   ctx.lineTo(x + w - r, y)\r\n//   ctx.arcTo(x + w, y, x + w, y + r, r)\r\n//   ctx.lineTo(x + w, y + h - r)\r\n//   ctx.arcTo(x + w, y + h, x + w - r, y + h, r)\r\n//   ctx.lineTo(x + r, y + h)\r\n//   ctx.arcTo(x, y + h, x, y + h - r, r)\r\n//   ctx.lineTo(x, y + r)\r\n//   ctx.arcTo(x, y, x + r, y, r)\r\n// }\r\n","/**\r\n * 缓动函数\r\n * t: current time（当前时间）\r\n * b: beginning value（初始值）\r\n * c: change in value（变化量）\r\n * d: duration（持续时间）\r\n * \r\n * 感谢张鑫旭大佬 https://github.com/zhangxinxu/Tween\r\n */\r\n\r\ninterface SpeedType {\r\n  easeIn: (...arr: number[]) => number\r\n  easeOut: (...arr: number[]) => number\r\n}\r\n\r\n// 二次方的缓动\r\nexport const quad: SpeedType = {\r\n  easeIn: function (t, b, c, d) {\r\n    if (t >= d) t = d\r\n    return c * (t /= d) * t + b\r\n  },\r\n  easeOut: function (t, b, c, d) {\r\n    if (t >= d) t = d\r\n    return -c * (t /= d) * (t - 2) + b\r\n  }\r\n}\r\n\r\n// 三次方的缓动\r\nexport const cubic: SpeedType = {\r\n  easeIn: function (t, b, c, d) {\r\n    if (t >= d) t = d\r\n    return c * (t /= d) * t * t + b\r\n  },\r\n  easeOut: function (t, b, c, d) {\r\n    if (t >= d) t = d\r\n    return c * ((t = t / d - 1) * t * t + 1) + b\r\n  }\r\n}\r\n\r\n// 四次方的缓动\r\nexport const quart: SpeedType = {\r\n  easeIn: function (t, b, c, d) {\r\n    if (t >= d) t = d\r\n    return c * (t /= d) * t * t * t + b\r\n  },\r\n  easeOut: function (t, b, c, d) {\r\n    if (t >= d) t = d\r\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b\r\n  }\r\n}\r\n\r\n// 五次方的缓动\r\nexport const quint: SpeedType = {\r\n  easeIn: function (t, b, c, d) {\r\n    if (t >= d) t = d\r\n    return c * (t /= d) * t * t * t * t + b\r\n  },\r\n  easeOut: function (t, b, c, d) {\r\n    if (t >= d) t = d\r\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b\r\n  }\r\n}\r\n\r\n// 正弦曲线的缓动\r\nexport const sine: SpeedType = {\r\n  easeIn: function (t, b, c, d) {\r\n    if (t >= d) t = d\r\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b\r\n  },\r\n  easeOut: function (t, b, c, d) {\r\n    if (t >= d) t = d\r\n    return c * Math.sin(t / d * (Math.PI / 2)) + b\r\n  }\r\n}\r\n\r\n// 指数曲线的缓动\r\nexport const expo: SpeedType = {\r\n  easeIn: function (t, b, c, d) {\r\n    if (t >= d) t = d\r\n    return (t == 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b\r\n  },\r\n  easeOut: function (t, b, c, d) {\r\n    if (t >= d) t = d\r\n    return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b\r\n  }\r\n}\r\n\r\n// 圆形曲线的缓动\r\nexport const circ: SpeedType = {\r\n  easeIn: function (t, b, c, d) {\r\n    if (t >= d) t = d\r\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b\r\n  },\r\n  easeOut: function (t, b, c, d) {\r\n    if (t >= d) t = d\r\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b\r\n  }\r\n}\r\n","import Lucky from './lucky'\r\nimport { UserConfigType, FontItemType, ImgType } from '../types/index'\r\nimport LuckyWheelConfig, {\r\n  BlockType,\r\n  PrizeType,\r\n  ButtonType,\r\n  DefaultConfigType,\r\n  DefaultStyleType,\r\n  StartCallbackType,\r\n  EndCallbackType\r\n} from '../types/wheel'\r\nimport {\r\n  removeEnter,\r\n  hasBackground,\r\n  computeRange,\r\n  splitText,\r\n  has,\r\n} from '../utils/index'\r\nimport { getAngle, fanShapedByArc } from '../utils/math'\r\nimport { quad } from '../utils/tween'\r\n\r\nexport default class LuckyWheel extends Lucky {\r\n  private blocks: Array<BlockType> = []\r\n  private prizes: Array<PrizeType> = []\r\n  private buttons: Array<ButtonType> = []\r\n  private defaultConfig: DefaultConfigType = {}\r\n  private defaultStyle: DefaultStyleType = {}\r\n  private _defaultConfig: Required<DefaultConfigType> = {} as Required<DefaultConfigType>\r\n  private _defaultStyle: Required<DefaultStyleType> = {} as Required<DefaultStyleType>\r\n  private startCallback?: StartCallbackType\r\n  private endCallback?: EndCallbackType\r\n  private Radius = 0                    // 大转盘半径\r\n  private prizeRadius = 0               // 奖品区域半径\r\n  private prizeDeg = 0                  // 奖品数学角度\r\n  private prizeAng = 0               // 奖品运算角度\r\n  private rotateDeg = 0                 // 转盘旋转角度\r\n  private maxBtnRadius = 0              // 最大按钮半径\r\n  private startTime = 0                 // 开始时间戳\r\n  private endTime = 0                   // 停止时间戳\r\n  private stopDeg = 0                   // 刻舟求剑\r\n  private endDeg = 0                    // 停止角度\r\n  private FPS = 16.6                    // 屏幕刷新率\r\n  private intermediateStop = false\r\n  private intermediateIndex = 0\r\n  private stopDelay = 500\r\n  /**\r\n   * 游戏当前的阶段\r\n   * step = 0 时, 游戏尚未开始\r\n   * step = 1 时, 此时处于加速阶段\r\n   * step = 2 时, 此时处于匀速阶段\r\n   * step = 3 时, 此时处于减速阶段\r\n   */\r\n  private step: 0 | 1 | 2 | 3 = 0\r\n  /**\r\n   * 中奖索引\r\n   * prizeFlag = undefined 时, 处于开始抽奖阶段, 正常旋转\r\n   * prizeFlag >= 0 时, 说明stop方法被调用, 并且传入了中奖索引\r\n   * prizeFlag === -1 时, 说明stop方法被调用, 并且传入了负值, 本次抽奖无效\r\n   */\r\n  private prizeFlag: number | undefined\r\n  private ImageCache = new Map()\r\n\r\n  /**\r\n   * 大转盘构造器\r\n   * @param config 配置项\r\n   * @param data 抽奖数据\r\n   */\r\n  constructor (config: UserConfigType, data: LuckyWheelConfig) {\r\n    super(config, {\r\n      width: data.width,\r\n      height: data.height\r\n    })\r\n    this.initData(data)\r\n    this.initWatch()\r\n    this.initComputed()\r\n    // 创建前回调函数\r\n    config.beforeCreate?.call(this)\r\n    // 首次初始化\r\n    this.init()\r\n  }\r\n\r\n  protected resize(): void {\r\n    super.resize()\r\n    this.Radius = Math.min(this.boxWidth, this.boxHeight) / 2\r\n    this.ctx.translate(this.Radius, this.Radius)\r\n    this.draw()\r\n    this.config.afterResize?.()\r\n  }\r\n\r\n  protected initLucky (): void {\r\n    this.Radius = 0\r\n    this.prizeRadius = 0\r\n    this.prizeDeg = 0\r\n    this.prizeAng = 0\r\n    this.rotateDeg = 0\r\n    this.maxBtnRadius = 0\r\n    this.startTime = 0\r\n    this.endTime = 0\r\n    this.stopDeg = 0\r\n    this.endDeg = 0\r\n    this.FPS = 16.6\r\n    this.prizeFlag = -1\r\n    this.step = 0\r\n    super.initLucky()\r\n  }\r\n\r\n  /**\r\n   * 初始化数据\r\n   * @param data\r\n   */\r\n  private initData (data: LuckyWheelConfig): void {\r\n    this.$set(this, 'width', data.width)\r\n    this.$set(this, 'height', data.height)\r\n    this.$set(this, 'blocks', data.blocks || [])\r\n    this.$set(this, 'prizes', data.prizes || [])\r\n    this.$set(this, 'buttons', data.buttons || [])\r\n    this.$set(this, 'defaultConfig', data.defaultConfig || {})\r\n    this.$set(this, 'defaultStyle', data.defaultStyle || {})\r\n    this.$set(this, 'startCallback', data.start)\r\n    this.$set(this, 'endCallback', data.end)\r\n  }\r\n\r\n  /**\r\n   * 初始化属性计算\r\n   */\r\n  private initComputed () {\r\n    // 默认配置\r\n    this.$computed(this, '_defaultConfig', () => {\r\n      const config = {\r\n        gutter: '0px',\r\n        offsetDegree: 0,\r\n        speed: 20,\r\n        speedFunction: 'quad',\r\n        accelerationTime: 2500,\r\n        decelerationTime: 2500,\r\n        stopRange: 0,\r\n        ...this.defaultConfig\r\n      }\r\n      return config\r\n    })\r\n    // 默认样式\r\n    this.$computed(this, '_defaultStyle', () => {\r\n      const style = {\r\n        fontSize: '18px',\r\n        fontColor: '#000',\r\n        fontStyle: 'sans-serif',\r\n        fontWeight: '400',\r\n        background: 'rgba(0,0,0,0)',\r\n        wordWrap: true,\r\n        lengthLimit: '90%',\r\n        ...this.defaultStyle\r\n      }\r\n      return style\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 初始化观察者\r\n   */\r\n  private initWatch () {\r\n    // 重置宽度\r\n    this.$watch('width', (newVal: string | number) => {\r\n      this.data.width = newVal\r\n      this.resize()\r\n    })\r\n    // 重置高度\r\n    this.$watch('height', (newVal: string | number) => {\r\n      this.data.height = newVal\r\n      this.resize()\r\n    })\r\n    // 观察 blocks 变化收集图片\r\n    this.$watch('blocks', (newData: Array<BlockType>) => {\r\n      this.initImageCache()\r\n    }, { deep: true })\r\n    // 观察 prizes 变化收集图片\r\n    this.$watch('prizes', (newData: Array<PrizeType>) => {\r\n      this.initImageCache()\r\n    }, { deep: true })\r\n    // 观察 buttons 变化收集图片\r\n    this.$watch('buttons', (newData: Array<ButtonType>) => {\r\n      this.initImageCache()\r\n    }, { deep: true })\r\n    this.$watch('defaultConfig', () => this.draw(), { deep: true })\r\n    this.$watch('defaultStyle', () => this.draw(), { deep: true })\r\n    this.$watch('startCallback', () => this.init())\r\n    this.$watch('endCallback', () => this.init())\r\n  }\r\n\r\n  /**\r\n   * 初始化 canvas 抽奖\r\n   */\r\n  public async init (): Promise<void> {\r\n    this.initLucky()\r\n    const { config } = this\r\n    // 初始化前回调函数\r\n    config.beforeInit?.call(this)\r\n    this.draw() // 先画一次, 防止闪烁\r\n    this.draw() // 再画一次, 拿到正确的按钮轮廓\r\n    // 异步加载图片\r\n    await this.initImageCache()\r\n    // 初始化后回调函数\r\n    config.afterInit?.call(this)\r\n  }\r\n\r\n  private initImageCache (): Promise<void> {\r\n    return new Promise((resolve) => {\r\n      const willUpdateImgs = {\r\n        blocks: this.blocks.map(block => block.imgs),\r\n        prizes: this.prizes.map(prize => prize.imgs),\r\n        buttons: this.buttons.map(btn => btn.imgs),\r\n      }\r\n      ;(<(keyof typeof willUpdateImgs)[]>Object.keys(willUpdateImgs)).forEach(imgName => {\r\n        const willUpdate = willUpdateImgs[imgName]\r\n        // 循环遍历所有图片\r\n        const allPromise: Promise<void>[] = []\r\n        willUpdate && willUpdate.forEach((imgs, cellIndex) => {\r\n          imgs && imgs.forEach((imgInfo, imgIndex) => {\r\n            allPromise.push(this.loadAndCacheImg(imgName, cellIndex, imgIndex))\r\n          })\r\n        })\r\n        Promise.all(allPromise).then(() => {\r\n          this.draw()\r\n          resolve()\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * canvas点击事件\r\n   * @param e 事件参数\r\n   */\r\n  protected handleClick (e: MouseEvent): void {\r\n    const { ctx } = this\r\n    ctx.beginPath()\r\n    ctx.arc(0, 0, this.maxBtnRadius, 0, Math.PI * 2, false)\r\n    if (!ctx.isPointInPath(e.offsetX, e.offsetY)) return\r\n    if (this.step !== 0) return\r\n    this.startCallback?.(e)\r\n  }\r\n\r\n  /**\r\n   * 根据索引单独加载指定图片并缓存\r\n   * @param cellName 模块名称\r\n   * @param cellIndex 模块索引\r\n   * @param imgName 模块对应的图片缓存\r\n   * @param imgIndex 图片索引\r\n   */\r\n  private async loadAndCacheImg (\r\n    cellName: 'blocks' | 'prizes' | 'buttons',\r\n    cellIndex: number,\r\n    imgIndex: number,\r\n  ): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      // 获取图片信息\r\n      const cell: BlockType | PrizeType | ButtonType = this[cellName][cellIndex]\r\n      if (!cell || !cell.imgs) return\r\n      const imgInfo = cell.imgs[imgIndex]\r\n      if (!imgInfo) return\r\n      // 异步加载图片\r\n      this.loadImg(imgInfo.src, imgInfo).then(async currImg => {\r\n        if (typeof imgInfo.formatter === 'function') {\r\n          currImg = await Promise.resolve(imgInfo.formatter.call(this, currImg))\r\n        }\r\n        this.ImageCache.set(imgInfo['src'], currImg)\r\n        resolve()\r\n      }).catch(err => {\r\n        console.error(`${cellName}[${cellIndex}].imgs[${imgIndex}] ${err}`)\r\n        reject()\r\n      })\r\n    })\r\n  }\r\n\r\n  private drawBlock (radius: number, block: BlockType, blockIndex: number): void {\r\n    const { ctx } = this\r\n    if (hasBackground(block.background)) {\r\n      ctx.beginPath()\r\n      ctx.fillStyle = block.background!\r\n      ctx.arc(0, 0, radius, 0, Math.PI * 2, false)\r\n      ctx.fill()\r\n    }\r\n    block.imgs && block.imgs.forEach((imgInfo, imgIndex) => {\r\n      const blockImg = this.ImageCache.get(imgInfo.src)\r\n      if (!blockImg) return\r\n      // 绘制图片\r\n      const [trueWidth, trueHeight] = this.computedWidthAndHeight(blockImg, imgInfo, radius * 2, radius * 2)\r\n      const [xAxis, yAxis] = [this.getOffsetX(trueWidth) + this.getLength(imgInfo.left, radius * 2), this.getLength(imgInfo.top, radius * 2) - radius]\r\n      ctx.save()\r\n      imgInfo.rotate && ctx.rotate(getAngle(this.rotateDeg))\r\n      this.drawImage(ctx, blockImg, xAxis, yAxis, trueWidth, trueHeight)\r\n      ctx.restore()\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 开始绘制\r\n   */\r\n  protected draw (): void {\r\n    const { config, ctx, _defaultConfig, _defaultStyle } = this\r\n    // 触发绘制前回调\r\n    config.beforeDraw?.call(this, ctx)\r\n    // 清空画布\r\n    ctx.clearRect(-this.Radius, -this.Radius, this.Radius * 2, this.Radius * 2)\r\n    // 计算 padding 并绘制 blocks 边框\r\n    this.prizeRadius = this.blocks.reduce((radius, block, blockIndex) => {\r\n      this.drawBlock(radius, block, blockIndex)\r\n      return radius - this.getLength(block.padding && block.padding.split(' ')[0])\r\n    }, this.Radius)\r\n    // 计算起始弧度\r\n    this.prizeDeg = 360 / this.prizes.length\r\n    this.prizeAng = getAngle(this.prizeDeg)\r\n    const shortSide = this.prizeRadius * Math.sin(this.prizeAng / 2) * 2\r\n    // 起始角度调整到正上方, 并且减去半个扇形角度\r\n    let start = getAngle(this.rotateDeg - 90 + this.prizeDeg / 2 + _defaultConfig.offsetDegree)\r\n    // 计算文字横坐标\r\n    const getFontX = (font: FontItemType, line: string) => {\r\n      return this.getOffsetX(ctx.measureText(line).width) + this.getLength(font.left, shortSide)\r\n    }\r\n    // 计算文字纵坐标\r\n    const getFontY = (font: FontItemType, height: number, lineIndex: number) => {\r\n      // 优先使用字体行高, 要么使用默认行高, 其次使用字体大小, 否则使用默认字体大小\r\n      const lineHeight = font.lineHeight || _defaultStyle.lineHeight || font.fontSize || _defaultStyle.fontSize\r\n      return this.getLength(font.top, height) + (lineIndex + 1) * this.getLength(lineHeight)\r\n    }\r\n    ctx.save()\r\n    // 绘制prizes奖品区域\r\n    this.prizes.forEach((prize, prizeIndex) => {\r\n      // 计算当前奖品区域中间坐标点\r\n      let currMiddleDeg = start + prizeIndex * this.prizeAng\r\n      // 奖品区域可见高度\r\n      let prizeHeight = this.prizeRadius - this.maxBtnRadius\r\n      // 绘制背景\r\n      const background = prize.background || _defaultStyle.background\r\n      if (hasBackground(background)) {\r\n        ctx.fillStyle = background\r\n        fanShapedByArc(\r\n          ctx, this.maxBtnRadius, this.prizeRadius,\r\n          currMiddleDeg - this.prizeAng / 2,\r\n          currMiddleDeg + this.prizeAng / 2,\r\n          this.getLength(_defaultConfig.gutter),\r\n        )\r\n        ctx.fill()\r\n      }\r\n      // 计算临时坐标并旋转文字\r\n      let x = Math.cos(currMiddleDeg) * this.prizeRadius\r\n      let y = Math.sin(currMiddleDeg) * this.prizeRadius\r\n      ctx.translate(x, y)\r\n      ctx.rotate(currMiddleDeg + getAngle(90))\r\n      // 绘制图片\r\n      prize.imgs && prize.imgs.forEach((imgInfo, imgIndex) => {\r\n        const prizeImg = this.ImageCache.get(imgInfo.src)\r\n        if (!prizeImg) return\r\n        const [trueWidth, trueHeight] = this.computedWidthAndHeight(\r\n          prizeImg,\r\n          imgInfo,\r\n          this.prizeAng * this.prizeRadius,\r\n          prizeHeight\r\n        )\r\n        const [xAxis, yAxis] = [\r\n          this.getOffsetX(trueWidth) + this.getLength(imgInfo.left, shortSide),\r\n          this.getLength(imgInfo.top, prizeHeight)\r\n        ]\r\n        this.drawImage(ctx, prizeImg, xAxis, yAxis, trueWidth, trueHeight)\r\n      })\r\n      // 逐行绘制文字\r\n      prize.fonts && prize.fonts.forEach(font => {\r\n        const fontColor = font.fontColor || _defaultStyle.fontColor\r\n        const fontWeight = font.fontWeight || _defaultStyle.fontWeight\r\n        const fontSize = this.getLength(font.fontSize || _defaultStyle.fontSize)\r\n        const fontStyle = font.fontStyle || _defaultStyle.fontStyle\r\n        const wordWrap = has(font, 'wordWrap') ? font.wordWrap : _defaultStyle.wordWrap\r\n        const lengthLimit = font.lengthLimit || _defaultStyle.lengthLimit\r\n        const lineClamp = font.lineClamp || _defaultStyle.lineClamp\r\n        ctx.fillStyle = fontColor\r\n        ctx.font = `${fontWeight} ${fontSize >> 0}px ${fontStyle}`\r\n        let lines = [], text = String(font.text)\r\n        if (wordWrap) {\r\n          lines = splitText(ctx, removeEnter(text), (lines) => {\r\n            // 三角形临边\r\n            const adjacentSide = this.prizeRadius - getFontY(font, prizeHeight, lines.length)\r\n            // 三角形短边\r\n            const shortSide = adjacentSide * Math.tan(this.prizeAng / 2)\r\n            // 最大宽度\r\n            let maxWidth = shortSide * 2 - this.getLength(_defaultConfig.gutter)\r\n            return this.getLength(lengthLimit, maxWidth)\r\n          }, lineClamp)\r\n        } else {\r\n          lines = text.split('\\n')\r\n        }\r\n        lines.filter(line => !!line).forEach((line, lineIndex) => {\r\n          ctx.fillText(line, getFontX(font, line), getFontY(font, prizeHeight, lineIndex))\r\n        })\r\n      })\r\n      // 修正旋转角度和原点坐标\r\n      ctx.rotate(getAngle(360) - currMiddleDeg - getAngle(90))\r\n      ctx.translate(-x, -y)\r\n    })\r\n    ctx.restore()\r\n    // 绘制按钮\r\n    this.buttons.forEach((btn, btnIndex) => {\r\n      let radius = this.getLength(btn.radius, this.prizeRadius)\r\n      // 绘制背景颜色\r\n      this.maxBtnRadius = Math.max(this.maxBtnRadius, radius)\r\n      if (hasBackground(btn.background)) {\r\n        ctx.beginPath()\r\n        ctx.fillStyle = btn.background as string\r\n        ctx.arc(0, 0, radius, 0, Math.PI * 2, false)\r\n        ctx.fill()\r\n      }\r\n      // 绘制指针\r\n      if (btn.pointer && hasBackground(btn.background)) {\r\n        ctx.beginPath()\r\n        ctx.fillStyle = btn.background as string\r\n        ctx.moveTo(-radius, 0)\r\n        ctx.lineTo(radius, 0)\r\n        ctx.lineTo(0, -radius * 2)\r\n        ctx.closePath()\r\n        ctx.fill()\r\n      }\r\n      // 绘制按钮图片\r\n      btn.imgs && btn.imgs.forEach((imgInfo, imgIndex) => {\r\n        const btnImg = this.ImageCache.get(imgInfo.src)\r\n        if (!btnImg) return\r\n        const [trueWidth, trueHeight] = this.computedWidthAndHeight(btnImg, imgInfo, radius * 2, radius * 2)\r\n        const [xAxis, yAxis] = [this.getOffsetX(trueWidth) + this.getLength(imgInfo.left, radius), this.getLength(imgInfo.top, radius)]\r\n        this.drawImage(ctx, btnImg, xAxis, yAxis, trueWidth, trueHeight)\r\n      })\r\n      // 绘制按钮文字\r\n      btn.fonts && btn.fonts.forEach(font => {\r\n        let fontColor = font.fontColor || _defaultStyle.fontColor\r\n        let fontWeight = font.fontWeight || _defaultStyle.fontWeight\r\n        let fontSize = this.getLength(font.fontSize || _defaultStyle.fontSize)\r\n        let fontStyle = font.fontStyle || _defaultStyle.fontStyle\r\n        ctx.fillStyle = fontColor\r\n        ctx.font = `${fontWeight} ${fontSize >> 0}px ${fontStyle}`\r\n        String(font.text).split('\\n').forEach((line, lineIndex) => {\r\n          ctx.fillText(line, getFontX(font, line), getFontY(font, radius, lineIndex))\r\n        })\r\n      })\r\n    })\r\n    // 触发绘制后回调\r\n    config.afterDraw?.call(this, ctx)\r\n  }\r\n\r\n  /**\r\n   * 刻舟求剑\r\n   */\r\n  private carveOnGunwaleOfAMovingBoat (): void {\r\n    const { _defaultConfig, prizeFlag, prizeDeg, rotateDeg } = this\r\n    this.endTime = Date.now()\r\n    const stopDeg = this.stopDeg = rotateDeg\r\n    const speed = _defaultConfig.speed\r\n    const stopRange = (Math.random() * prizeDeg - prizeDeg / 2) * this.getLength(_defaultConfig.stopRange)\r\n    let i = 0, prevSpeed = 0, prevDeg = 0\r\n    while (++i) {\r\n      const endDeg = 360 * i - prizeFlag! * prizeDeg - rotateDeg - _defaultConfig.offsetDegree + stopRange - prizeDeg / 2\r\n      let currSpeed = quad.easeOut(this.FPS, stopDeg, endDeg, _defaultConfig.decelerationTime) - stopDeg\r\n      if (currSpeed > speed) {\r\n        this.endDeg = (speed - prevSpeed > currSpeed - speed) ? endDeg : prevDeg\r\n        break\r\n      }\r\n      prevDeg = endDeg\r\n      prevSpeed = currSpeed\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 对外暴露: 开始抽奖方法\r\n   */\r\n  public play (): void {\r\n    if (this.step !== 0) return\r\n    // 记录游戏开始时间\r\n    this.startTime = Date.now()\r\n    // 重置中奖索引\r\n    this.prizeFlag = void 0\r\n    // 加速阶段\r\n    this.step = 1\r\n    // 触发回调\r\n    this.config.afterStart?.()\r\n    // 开始游戏\r\n    this.run()\r\n  }\r\n\r\n  /**\r\n   * 对外暴露: 缓慢停止方法\r\n   * @param index 中奖索引\r\n   */\r\npublic stop(index?: number, config?: {\r\n  intermediateStop?: boolean\r\n  intermediateIndex?: number\r\n  stopDelay?: number\r\n}): void {\r\n  if (this.step === 0 || this.step === 3) return\r\n  \r\n  // 处理配置参数\r\n  if (config) {\r\n    this.intermediateStop = config.intermediateStop ?? false\r\n    this.intermediateIndex = config.intermediateIndex ?? 0\r\n    this.stopDelay = config.stopDelay ?? 500\r\n  }\r\n\r\n  // 计算最终索引\r\n  if (!index && index !== 0) {\r\n    const rangeArr = this.prizes.map(item => item.range)\r\n    index = computeRange(rangeArr)\r\n  }\r\n\r\n  // 启用中间停顿\r\n  if (this.intermediateStop) {\r\n    this.step = 2  // 进入匀速阶段\r\n    this.prizeFlag = this.intermediateIndex % this.prizes.length\r\n    setTimeout(() => {\r\n      this.prizeFlag = index! % this.prizes.length\r\n      this.step = 3  // 进入减速阶段\r\n      this.endTime = Date.now()  // 重置计时\r\n    }, this.stopDelay)\r\n  } else {\r\n    // 原始逻辑\r\n    if (index! < 0) {\r\n      this.step = 0\r\n      this.prizeFlag = -1\r\n    } else {\r\n      this.step = 3\r\n      this.prizeFlag = index! % this.prizes.length\r\n    }\r\n  }\r\n}\r\n\r\n  /**\r\n   * 实际开始执行方法\r\n   * @param num 记录帧动画执行多少次\r\n   */\r\n  private run (num: number = 0): void {\r\n    const { rAF, step, prizeFlag, _defaultConfig } = this\r\n    const { accelerationTime, decelerationTime, speed } = _defaultConfig\r\n\tif (step === 3 && this.intermediateStop) {\r\n    this.endTime = Date.now()\r\n    this.intermediateStop = false\r\n  }\r\n    // 游戏结束\r\n    if (step === 0) {\r\n      this.endCallback?.(this.prizes.find((prize, index) => index === prizeFlag) || {})\r\n      return\r\n    }\r\n    // 如果等于 -1 就直接停止游戏\r\n    if (prizeFlag === -1) return\r\n    // 计算结束位置\r\n    if (step === 3 && !this.endDeg) this.carveOnGunwaleOfAMovingBoat()\r\n    // 计算时间间隔\r\n    const startInterval = Date.now() - this.startTime\r\n    const endInterval = Date.now() - this.endTime\r\n    let rotateDeg = this.rotateDeg\r\n    // \r\n    if (step === 1 || startInterval < accelerationTime) { // 加速阶段\r\n      // 记录帧率\r\n      this.FPS = startInterval / num\r\n      const currSpeed = quad.easeIn(startInterval, 0, speed, accelerationTime)\r\n      // 加速到峰值后, 进入匀速阶段\r\n      if (currSpeed === speed) {\r\n        this.step = 2\r\n      }\r\n      rotateDeg = rotateDeg + currSpeed % 360\r\n    } else if (step === 2) { // 匀速阶段\r\n      // 速度保持不变\r\n      rotateDeg = rotateDeg + speed % 360\r\n      // 如果 prizeFlag 有值, 则进入减速阶段\r\n      if (prizeFlag !== void 0 && prizeFlag >= 0) {\r\n        this.step = 3\r\n        // 清空上一次的位置信息\r\n        this.stopDeg = 0\r\n        this.endDeg = 0\r\n      }\r\n    } else if (step === 3) { // 减速阶段\r\n      // 开始缓慢停止\r\n      rotateDeg = quad.easeOut(endInterval, this.stopDeg, this.endDeg, decelerationTime)\r\n      if (endInterval >= decelerationTime) {\r\n        this.step = 0\r\n      }\r\n    } else {\r\n      // 出现异常\r\n      this.stop(-1)\r\n    }\r\n    this.rotateDeg = rotateDeg\r\n    this.draw()\r\n    rAF(this.run.bind(this, num + 1))\r\n  }\r\n\r\n  /**\r\n   * 换算渲染坐标\r\n   * @param x\r\n   * @param y\r\n   */\r\n  protected conversionAxis (x: number, y: number): [number, number] {\r\n    const { config } = this\r\n    return [x / config.dpr - this.Radius, y / config.dpr - this.Radius]\r\n  }\r\n}\r\n","import Lucky from './lucky'\r\nimport { UserConfigType, ImgType } from '../types/index'\r\nimport LuckyGridConfig, {\r\n  BlockType,\r\n  PrizeType,\r\n  ButtonType,\r\n  CellFontType,\r\n  CellImgType,\r\n  RowsType,\r\n  ColsType,\r\n  CellType,\r\n  DefaultConfigType,\r\n  DefaultStyleType,\r\n  ActiveStyleType,\r\n  StartCallbackType,\r\n  EndCallbackType,\r\n} from '../types/grid'\r\nimport {\r\n  has,\r\n  isExpectType,\r\n  removeEnter,\r\n  computePadding,\r\n  hasBackground,\r\n  computeRange,\r\n  splitText\r\n} from '../utils/index'\r\nimport { roundRectByArc, getLinearGradient } from '../utils/math'\r\nimport { quad } from '../utils/tween'\r\n\r\nexport default class LuckyGrid extends Lucky {\r\n  private rows: RowsType = 3\r\n  private cols: ColsType = 3\r\n  private blocks: Array<BlockType> = []\r\n  private prizes: Array<PrizeType> = []\r\n  private buttons: Array<ButtonType> = []\r\n  private button?: ButtonType\r\n  private defaultConfig: DefaultConfigType = {}\r\n  private defaultStyle: DefaultStyleType = {}\r\n  private activeStyle: ActiveStyleType = {}\r\n  private _defaultConfig: Required<DefaultConfigType> = {} as Required<DefaultConfigType>\r\n  private _defaultStyle: Required<DefaultStyleType> = {} as Required<DefaultStyleType>\r\n  private _activeStyle: Required<ActiveStyleType> = {} as Required<ActiveStyleType>\r\n  private startCallback?: StartCallbackType\r\n  private endCallback?: EndCallbackType\r\n  private cellWidth = 0                 // 格子宽度\r\n  private cellHeight = 0                // 格子高度\r\n  private startTime = 0                 // 开始时间戳\r\n  private endTime = 0                   // 结束时间戳\r\n  private currIndex = 0                 // 当前index累加\r\n  private stopIndex = 0                 // 刻舟求剑\r\n  private endIndex = 0                  // 停止索引\r\n  private demo = false                  // 是否自动游走\r\n  private timer = 0                     // 游走定时器\r\n  private FPS = 16.6                    // 屏幕刷新率\r\n  private intermediateStop = false\r\n  private intermediateIndex = 0\r\n  private stopDelay = 500\r\n  private isFinalStop = true\r\n  private pauseStartTime = 0\r\n   private slowMoveStartTime = 0\r\n   private _isSlowMoveInitialized = false\r\n   private lastDrawTime = 0\r\n   \r\n  /**\r\n   * 游戏当前的阶段\r\n   * step = 0 时, 游戏尚未开始\r\n   * step = 1 时, 此时处于加速阶段\r\n   * step = 2 时, 此时处于匀速阶段\r\n   * step = 3 时, 此时处于减速阶段\r\n   * stop = 4 时，此时处于经停止阶段\r\n   * stop = 5 时，此时处于低速平移阶段\r\n   */\r\n  private step: 0 | 1 | 2 | 3 | 4 | 5 = 0\r\n  /**\r\n   * 中奖索引\r\n   * prizeFlag = undefined 时, 处于开始抽奖阶段, 正常旋转\r\n   * prizeFlag >= 0 时, 说明stop方法被调用, 并且传入了中奖索引\r\n   * prizeFlag === -1 时, 说明stop方法被调用, 并且传入了负值, 本次抽奖无效\r\n   */\r\n  private prizeFlag: number | undefined = -1\r\n  // 所有格子\r\n  private cells: CellType<CellFontType, CellImgType>[] = []\r\n  // 奖品区域几何信息\r\n  private prizeArea: { x: number, y: number, w: number, h: number } | undefined\r\n  // 图片缓存\r\n  private ImageCache = new Map()\r\n\r\n  /**\r\n   * 九宫格构造器\r\n   * @param config 配置项\r\n   * @param data 抽奖数据\r\n   */\r\n  constructor (config: UserConfigType, data: LuckyGridConfig) {\r\n    super(config, {\r\n      width: data.width,\r\n      height: data.height\r\n    })\r\n    this.initData(data)\r\n    this.initWatch()\r\n    this.initComputed()\r\n    // 创建前回调函数\r\n    config.beforeCreate?.call(this)\r\n    // 首次初始化\r\n    this.init()\r\n  }\r\n\r\n  protected resize(): void {\r\n    super.resize()\r\n    this.draw()\r\n    this.config.afterResize?.()\r\n  }\r\n\r\n  protected initLucky (): void {\r\n    this.cellWidth = 0\r\n    this.cellHeight = 0\r\n    this.startTime = 0\r\n    this.endTime = 0\r\n    this.currIndex = 0\r\n    this.stopIndex = 0\r\n    this.endIndex = 0\r\n    this.demo = false\r\n    this.timer = 0\r\n    this.FPS = 16.6\r\n    this.prizeFlag = -1\r\n    this.step = 0\r\n    super.initLucky()\r\n  }\r\n\r\n  /**\r\n   * 初始化数据\r\n   * @param data\r\n   */\r\n  private initData (data: LuckyGridConfig): void {\r\n    this.$set(this, 'width', data.width)\r\n    this.$set(this, 'height', data.height)\r\n    this.$set(this, 'rows', Number(data.rows) || 3)\r\n    this.$set(this, 'cols', Number(data.cols) || 3)\r\n    this.$set(this, 'blocks', data.blocks || [])\r\n    this.$set(this, 'prizes', data.prizes || [])\r\n    this.$set(this, 'buttons', data.buttons || [])\r\n    // 临时过渡代码, 升级到2.x即可删除\r\n    this.$set(this, 'button', data.button)\r\n    this.$set(this, 'defaultConfig', data.defaultConfig || {})\r\n    this.$set(this, 'defaultStyle', data.defaultStyle || {})\r\n    this.$set(this, 'activeStyle', data.activeStyle || {})\r\n    this.$set(this, 'startCallback', data.start)\r\n    this.$set(this, 'endCallback', data.end)\r\n  }\r\n\r\n  /**\r\n   * 初始化属性计算\r\n   */\r\n  private initComputed (): void {\r\n    // 默认配置\r\n    this.$computed(this, '_defaultConfig', () => {\r\n      const config = {\r\n        gutter: 5,\r\n        speed: 20,\r\n        accelerationTime: 2500,\r\n        decelerationTime: 2500,\r\n        ...this.defaultConfig\r\n      }\r\n      config.gutter = this.getLength(config.gutter)\r\n      config.speed = config.speed / 40\r\n      return config\r\n    })\r\n    // 默认样式\r\n    this.$computed(this, '_defaultStyle', () => {\r\n      return {\r\n        borderRadius: 20,\r\n        fontColor: '#000',\r\n        fontSize: '18px',\r\n        fontStyle: 'sans-serif',\r\n        fontWeight: '400',\r\n        background: 'rgba(0,0,0,0)',\r\n        shadow: '',\r\n        wordWrap: true,\r\n        lengthLimit: '90%',\r\n        ...this.defaultStyle\r\n      }\r\n    })\r\n    // 中奖样式\r\n    this.$computed(this, '_activeStyle', () => {\r\n      return {\r\n        background: '#ffce98',\r\n        shadow: '',\r\n        ...this.activeStyle\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 初始化观察者\r\n   */\r\n  private initWatch (): void {\r\n    // 重置宽度\r\n    this.$watch('width', (newVal: string | number) => {\r\n      this.data.width = newVal\r\n      this.resize()\r\n    })\r\n    // 重置高度\r\n    this.$watch('height', (newVal: string | number) => {\r\n      this.data.height = newVal\r\n      this.resize()\r\n    })\r\n    // 监听 blocks 数据的变化\r\n    this.$watch('blocks', (newData: Array<BlockType>) => {\r\n      this.initImageCache()\r\n    }, { deep: true })\r\n    // 监听 prizes 数据的变化\r\n    this.$watch('prizes', (newData: Array<PrizeType>) => {\r\n      this.initImageCache()\r\n    }, { deep: true })\r\n    // 监听 button 数据的变化\r\n    this.$watch('buttons', (newData: Array<ButtonType>) => {\r\n      this.initImageCache()\r\n    }, { deep: true })\r\n    this.$watch('rows', () => this.init())\r\n    this.$watch('cols', () => this.init())\r\n    this.$watch('defaultConfig', () => this.draw(), { deep: true })\r\n    this.$watch('defaultStyle', () => this.draw(), { deep: true })\r\n    this.$watch('activeStyle', () => this.draw(), { deep: true })\r\n    this.$watch('startCallback', () => this.init())\r\n    this.$watch('endCallback', () => this.init())\r\n  }\r\n\r\n  /**\r\n   * 初始化 canvas 抽奖\r\n   */\r\n  public async init (): Promise<void> {\r\n    this.initLucky()\r\n    const { config } = this\r\n    // 初始化前回调函数\r\n    config.beforeInit?.call(this)\r\n    // 先画一次防止闪烁\r\n    this.draw()\r\n    // 异步加载图片\r\n    await this.initImageCache()\r\n    // 初始化后回调函数\r\n    config.afterInit?.call(this)\r\n  }\r\n\r\n  private initImageCache (): Promise<void> {\r\n    return new Promise((resolve) => {\r\n      const btnImgs = this.buttons.map(btn => btn.imgs)\r\n      if (this.button) btnImgs.push(this.button.imgs)\r\n      const willUpdateImgs = {\r\n        blocks: this.blocks.map(block => block.imgs),\r\n        prizes: this.prizes.map(prize => prize.imgs),\r\n        buttons: btnImgs,\r\n      }\r\n      ;(<(keyof typeof willUpdateImgs)[]>Object.keys(willUpdateImgs)).forEach(imgName => {\r\n        const willUpdate = willUpdateImgs[imgName]\r\n        // 循环遍历所有图片\r\n        const allPromise: Promise<void>[] = []\r\n        willUpdate && willUpdate.forEach((imgs, cellIndex) => {\r\n          imgs && imgs.forEach((imgInfo, imgIndex) => {\r\n            allPromise.push(this.loadAndCacheImg(imgName, cellIndex, imgIndex))\r\n          })\r\n        })\r\n        Promise.all(allPromise).then(() => {\r\n          this.draw()\r\n          resolve()\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * canvas点击事件\r\n   * @param e 事件参数\r\n   */\r\n  protected handleClick (e: MouseEvent): void {\r\n    const { ctx } = this\r\n    ;[\r\n      ...this.buttons,\r\n      this.button\r\n    ].forEach(btn => {\r\n      if (!btn) return\r\n      const [x, y, width, height] = this.getGeometricProperty([\r\n        btn.x, btn.y, btn.col || 1, btn.row || 1\r\n      ])\r\n      ctx.beginPath()\r\n      ctx.rect(x, y, width, height)\r\n      if (!ctx.isPointInPath(e.offsetX, e.offsetY)) return\r\n      if (this.step !== 0) return\r\n      // 如果btn里有单独的回调方法, 优先触发\r\n      if (typeof btn.callback === 'function') btn.callback.call(this, btn)\r\n      // 最后触发公共回调\r\n      this.startCallback?.(e, btn)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 根据索引单独加载指定图片并缓存\r\n   * @param cellName 模块名称\r\n   * @param cellIndex 模块索引\r\n   * @param imgName 模块对应的图片缓存\r\n   * @param imgIndex 图片索引\r\n   */\r\n  private async loadAndCacheImg (\r\n    cellName: 'blocks' | 'prizes' | 'buttons',\r\n    cellIndex: number,\r\n    imgIndex: number\r\n  ): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      let cell: BlockType | PrizeType | ButtonType = this[cellName][cellIndex]\r\n      // 临时过渡代码, 升级到2.x即可删除\r\n      if (cellName === 'buttons' && !this.buttons.length && this.button) {\r\n        cell = this.button\r\n      }\r\n      if (!cell || !cell.imgs) return\r\n      const imgInfo = cell.imgs[imgIndex]\r\n      if (!imgInfo) return\r\n      // 异步加载图片\r\n      const request = [\r\n        this.loadImg(imgInfo.src, imgInfo),\r\n        imgInfo['activeSrc'] && this.loadImg(imgInfo['activeSrc'], imgInfo, '$activeResolve')\r\n      ]\r\n      Promise.all(request).then(async ([defaultImg, activeImg]) => {\r\n        const formatter = imgInfo.formatter\r\n        // 对图片进行处理\r\n        if (typeof formatter === 'function') {\r\n          defaultImg = await Promise.resolve(formatter.call(this, defaultImg))\r\n          if (activeImg) {\r\n            activeImg = await Promise.resolve(formatter.call(this, activeImg))\r\n          }\r\n        }\r\n        this.ImageCache.set(imgInfo['src'], defaultImg)\r\n        activeImg && this.ImageCache.set(imgInfo['activeSrc'], activeImg)\r\n        resolve()\r\n      }).catch(err => {\r\n        console.error(`${cellName}[${cellIndex}].imgs[${imgIndex}] ${err}`)\r\n        reject()\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 绘制九宫格抽奖\r\n   */\r\n  protected draw (): void {\r\n    const { config, ctx, _defaultConfig, _defaultStyle, _activeStyle } = this\r\n    // 触发绘制前回调\r\n    config.beforeDraw?.call(this, ctx)\r\n    // 清空画布\r\n    ctx.clearRect(0, 0, this.boxWidth, this.boxHeight)\r\n    // 合并奖品和按钮\r\n    this.cells = [\r\n      ...this.prizes,\r\n      ...this.buttons\r\n    ]\r\n    if (this.button) this.cells.push(this.button)\r\n    this.cells.forEach(cell => {\r\n      cell.col = cell.col || 1\r\n      cell.row = cell.row || 1\r\n    })\r\n    // 计算获取奖品区域的几何信息\r\n    this.prizeArea = this.blocks.reduce(({x, y, w, h}, block, blockIndex) => {\r\n      const [paddingTop, paddingBottom, paddingLeft, paddingRight] = computePadding(block, this.getLength.bind(this))\r\n      const r = block.borderRadius ? this.getLength(block.borderRadius) : 0\r\n      // 绘制边框\r\n      const background = block.background\r\n      if (hasBackground(background)) {\r\n        ctx.fillStyle = this.handleBackground(x, y, w, h, background!)\r\n        roundRectByArc(ctx, x, y, w, h, r)\r\n        ctx.fill()\r\n      }\r\n      // 绘制图片\r\n      block.imgs && block.imgs.forEach((imgInfo, imgIndex) => {\r\n        const blockImg = this.ImageCache.get(imgInfo.src)\r\n        if (!blockImg) return\r\n        // 绘制图片\r\n        const [trueWidth, trueHeight] = this.computedWidthAndHeight(blockImg, imgInfo, w, h)\r\n        const [xAxis, yAxis] = [\r\n          this.getOffsetX(trueWidth, w) + this.getLength(imgInfo.left, w),\r\n          this.getLength(imgInfo.top, h)\r\n        ]\r\n        this.drawImage(ctx, blockImg, x + xAxis, y + yAxis, trueWidth, trueHeight)\r\n      })\r\n      return {\r\n        x: x + paddingLeft,\r\n        y: y + paddingTop,\r\n        w: w - paddingLeft - paddingRight,\r\n        h: h - paddingTop - paddingBottom\r\n      }\r\n    }, { x: 0, y: 0, w: this.boxWidth, h: this.boxHeight })\r\n    // 计算单一奖品格子的宽度和高度\r\n    this.cellWidth = (this.prizeArea.w - _defaultConfig.gutter * (this.cols - 1)) / this.cols\r\n    this.cellHeight = (this.prizeArea.h - _defaultConfig.gutter * (this.rows - 1)) / this.rows\r\n    // 绘制所有格子\r\n    this.cells.forEach((cell, cellIndex) => {\r\n      let [x, y, width, height] = this.getGeometricProperty([cell.x, cell.y, cell.col!, cell.row!])\r\n      // 默认不显示中奖标识\r\n      let isActive = false\r\n      // 只要 prizeFlag 不是负数, 就显示中奖标识\r\n      if (this.prizeFlag === void 0 || this.prizeFlag > -1) {\r\n        isActive = cellIndex === this.currIndex % this.prizes.length >> 0\r\n      }\r\n      // 绘制背景色\r\n      const background = isActive ? _activeStyle.background : (cell.background || _defaultStyle.background)\r\n      if (hasBackground(background)) {\r\n        // 处理阴影 (暂时先用any, 这里后续要优化)\r\n        const shadow: any = (\r\n          isActive ? _activeStyle.shadow : (cell.shadow || _defaultStyle.shadow)\r\n        )\r\n          .replace(/px/g, '') // 清空px字符串\r\n          .split(',')[0].split(' ') // 防止有人声明多个阴影, 截取第一个阴影\r\n          .map((n, i) => i < 3 ? Number(n) : n) // 把数组的前三个值*像素比\r\n        // 绘制阴影\r\n        if (shadow.length === 4) {\r\n          ctx.shadowColor = shadow[3]\r\n          ctx.shadowOffsetX = shadow[0] * config.dpr\r\n          ctx.shadowOffsetY = shadow[1] * config.dpr\r\n          ctx.shadowBlur = shadow[2]\r\n          // 修正(格子+阴影)的位置, 这里使用逗号运算符\r\n          shadow[0] > 0 ? (width -= shadow[0]) : (width += shadow[0], x -= shadow[0])\r\n          shadow[1] > 0 ? (height -= shadow[1]) : (height += shadow[1], y -= shadow[1])\r\n        }\r\n        // 绘制背景\r\n        ctx.fillStyle = this.handleBackground(x, y, width, height, background)\r\n        const borderRadius = this.getLength(cell.borderRadius ? cell.borderRadius : _defaultStyle.borderRadius)\r\n        roundRectByArc(ctx, x, y, width, height, borderRadius)\r\n        ctx.fill()\r\n        // 清空阴影\r\n        ctx.shadowColor = 'rgba(0, 0, 0, 0)'\r\n        ctx.shadowOffsetX = 0\r\n        ctx.shadowOffsetY = 0\r\n        ctx.shadowBlur = 0\r\n      }\r\n      // 修正图片缓存\r\n      let cellName = 'prizes'\r\n      if (cellIndex >= this.prizes.length) {\r\n        cellName = 'buttons'\r\n        cellIndex -= this.prizes.length\r\n      }\r\n      // 绘制图片\r\n      cell.imgs && cell.imgs.forEach((imgInfo, imgIndex) => {\r\n        const cellImg = this.ImageCache.get(imgInfo.src)\r\n        const activeImg = this.ImageCache.get(imgInfo['activeSrc'])\r\n        if (!cellImg) return\r\n        const renderImg = (isActive && activeImg) || cellImg\r\n        if (!renderImg) return\r\n        const [trueWidth, trueHeight] = this.computedWidthAndHeight(renderImg, imgInfo, width, height)\r\n        const [xAxis, yAxis] = [\r\n          x + this.getOffsetX(trueWidth, width) + this.getLength(imgInfo.left, width),\r\n          y + this.getLength(imgInfo.top, height)\r\n        ]\r\n        this.drawImage(ctx, renderImg, xAxis, yAxis, trueWidth, trueHeight)\r\n      })\r\n      // 绘制文字\r\n      cell.fonts && cell.fonts.forEach(font => {\r\n        // 字体样式\r\n        const style = isActive && _activeStyle.fontStyle\r\n          ? _activeStyle.fontStyle\r\n          : (font.fontStyle || _defaultStyle.fontStyle)\r\n        // 字体加粗\r\n        const fontWeight = isActive && _activeStyle.fontWeight\r\n          ? _activeStyle.fontWeight\r\n          : (font.fontWeight || _defaultStyle.fontWeight)\r\n        // 字体大小\r\n        const size = isActive && _activeStyle.fontSize\r\n          ? this.getLength(_activeStyle.fontSize)\r\n          : this.getLength(font.fontSize || _defaultStyle.fontSize)\r\n        // 字体行高\r\n        const lineHeight = isActive && _activeStyle.lineHeight\r\n          ? _activeStyle.lineHeight\r\n          : font.lineHeight || _defaultStyle.lineHeight || font.fontSize || _defaultStyle.fontSize\r\n        const wordWrap = has(font, 'wordWrap') ? font.wordWrap : _defaultStyle.wordWrap\r\n        const lengthLimit = font.lengthLimit || _defaultStyle.lengthLimit\r\n        const lineClamp = font.lineClamp || _defaultStyle.lineClamp\r\n        ctx.font = `${fontWeight} ${size >> 0}px ${style}`\r\n        ctx.fillStyle = (isActive && _activeStyle.fontColor) ? _activeStyle.fontColor : (font.fontColor || _defaultStyle.fontColor)\r\n        let lines = [], text = String(font.text)\r\n        // 计算文字换行\r\n        if (wordWrap) {\r\n          // 最大宽度\r\n          let maxWidth = this.getLength(lengthLimit, width)\r\n          lines = splitText(ctx, removeEnter(text), () => maxWidth, lineClamp)\r\n        } else {\r\n          lines = text.split('\\n')\r\n        }\r\n        lines.forEach((line, lineIndex) => {\r\n          ctx.fillText(\r\n            line,\r\n            x + this.getOffsetX(ctx.measureText(line).width, width) + this.getLength(font.left, width),\r\n            y + this.getLength(font.top, height) + (lineIndex + 1) * this.getLength(lineHeight)\r\n          )\r\n        })\r\n      })\r\n    })\r\n    // 触发绘制后回调\r\n    config.afterDraw?.call(this, ctx)\r\n  }\r\n\r\n  /**\r\n   * 处理背景色\r\n   * @param x\r\n   * @param y\r\n   * @param width\r\n   * @param height\r\n   * @param background\r\n   * @param isActive\r\n   */\r\n  private handleBackground (\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number,\r\n    background: string,\r\n  ) {\r\n    const { ctx } = this\r\n    // 处理线性渐变\r\n    if (background.includes('linear-gradient')) {\r\n      background = getLinearGradient(ctx, x, y, width, height, background)\r\n    }\r\n    return background\r\n  }\r\n\r\n  /**\r\n   * 刻舟求剑\r\n   */\r\n  private carveOnGunwaleOfAMovingBoat (targetIndex?: number): void {\r\n  const { _defaultConfig, prizeFlag, currIndex } = this;\r\n  this.endTime = Date.now();\r\n  const stopIndex = this.stopIndex = currIndex;\r\n  const speed = _defaultConfig.speed;\r\n  const finalTarget = targetIndex ?? prizeFlag!;\r\n  \r\n  let i = 0, prevSpeed = 0, prevIndex = 0;\r\n  while (++i) {\r\n    const endIndex = this.prizes.length * i + finalTarget - (stopIndex);\r\n    const currSpeed = quad.easeOut(this.FPS, stopIndex, endIndex, _defaultConfig.decelerationTime) - stopIndex;\r\n    if (currSpeed > speed) {\r\n      this.endIndex = (speed - prevSpeed > currSpeed - speed) ? endIndex : prevIndex;\r\n      break;\r\n    }\r\n    prevIndex = endIndex;\r\n    prevSpeed = currSpeed;\r\n  }\r\n}\r\n\r\n\r\nprivate slowMoveToTarget(targetIndex?: number): void {\r\n  const { prizeFlag, currIndex, prizes } = this;\r\n  const finalTarget = targetIndex ?? prizeFlag!;\r\n  \r\n  // 当前实际索引（取模防止溢出）\r\n  const currentPos = currIndex % prizes.length;\r\n  \r\n  // 计算最短顺时针距离\r\n  let distance = (finalTarget - currentPos + prizes.length) % prizes.length;\r\n  \r\n  // 设置绝对目标位置（保持currIndex增长趋势）\r\n  this.endIndex = currIndex + distance;\r\n  \r\n  console.log(`移动计算：${currentPos} → ${finalTarget}，距离=${distance}，绝对目标=${this.endIndex}`);\r\n}\r\n\r\n  /**\r\n   * 对外暴露: 开始抽奖方法\r\n   */\r\n  public play (): void {\r\n    if (this.step !== 0) return\r\n    // 记录游戏开始的时间\r\n    this.startTime = Date.now()\r\n    // 重置中奖索引\r\n    this.prizeFlag = void 0\r\n    // 开始加速\r\n    this.step = 1\r\n    // 触发回调\r\n    this.config.afterStart?.()\r\n    // 开始运行\r\n    this.run()\r\n  }\r\n\r\n /**\r\n * 对外暴露: 缓慢停止方法\r\n * @param index 中奖索引\r\n * @param config 停止配置项\r\n *   - intermediateStop 是否启用中间停止点\r\n *   - intermediateIndex 中间停止点的索引\r\n *   - stopDelay 中间停止点的停留时间(毫秒)\r\n */\r\npublic stop(\r\n  index?: number,\r\n  config?: {\r\n    intermediateStop?: boolean\r\n    intermediateIndex?: number\r\n    stopDelay?: number\r\n  }\r\n): void {\r\n  if (this.step === 0 || this.step === 3) return;\r\n  \r\n  // 如果没有传递中奖索引, 则通过range属性计算一个\r\n  if (!index && index !== 0) {\r\n    const rangeArr = this.prizes.map(item => item.range);\r\n    index = computeRange(rangeArr);\r\n  }\r\n  \r\n  // 设置中间停止点参数\r\n  if (config?.intermediateStop) {\r\n    this.intermediateStop = true;\r\n    this.intermediateIndex = config.intermediateIndex ?? 0;\r\n    this.stopDelay = config.stopDelay ?? 500;\r\n    this.isFinalStop = false;\r\n  } else {\r\n    this.intermediateStop = false;\r\n    this.isFinalStop = true;\r\n  }\r\n\r\n  // 如果index是负数则停止游戏, 反之则传递中奖索引\r\n  if (index < 0) {\r\n    this.step = 0;\r\n    this.prizeFlag = -1;\r\n  } else {\r\n    this.step = 2; // 进入匀速阶段\r\n    this.prizeFlag = index % this.prizes.length;\r\n  }\r\n}\r\n\r\n/**\r\n * 实际开始执行方法\r\n * @param num 记录帧动画执行多少次\r\n */\r\nprivate run(num: number = 0): void {\r\n  const { rAF, step, prizes, prizeFlag, _defaultConfig } = this;\r\n  const { accelerationTime, decelerationTime, speed } = _defaultConfig;\r\n  \r\n  // 结束游戏\r\n  if (step === 0) {\r\n    this.endCallback?.(this.prizes.find((prize, index) => index === prizeFlag) || {});\r\n    return;\r\n  }\r\n  \r\n  // 如果等于 -1 就直接停止游戏\r\n  if (prizeFlag === -1) return;\r\n  \r\n  // 计算时间间隔\r\n  const startInterval = Date.now() - this.startTime;\r\n  const endInterval = Date.now() - this.endTime;\r\n  let currIndex = this.currIndex;\r\n  \r\n  if (step === 1 || startInterval < accelerationTime) { // 加速阶段\r\n    // 记录帧率\r\n    this.FPS = startInterval / num;\r\n    const currSpeed = quad.easeIn(startInterval, 0.1, speed - 0.1, accelerationTime);\r\n    // 加速到峰值后, 进入匀速阶段\r\n    if (currSpeed === speed) {\r\n      this.step = 2;\r\n    }\r\n    currIndex = currIndex + currSpeed % prizes.length;\r\n  } \r\n  else if (step === 2) { // 匀速阶段\r\n    // 速度保持不变\r\n    currIndex = currIndex + speed % prizes.length;\r\n    // 如果 prizeFlag 有值, 则进入减速阶段\r\n    if (prizeFlag !== void 0 && prizeFlag >= 0) {\r\n      if (this.intermediateStop && !this.isFinalStop) {\r\n        // 先减速到中间点\r\n        this.step = 3;\r\n        this.endTime = Date.now();\r\n        // 计算减速到中间点的位置\r\n        this.carveOnGunwaleOfAMovingBoat(this.intermediateIndex);\r\n      } else {\r\n        // 直接减速到最终点\r\n        this.step = 3;\r\n        this.endTime = Date.now();\r\n        // 清空上一次的位置信息\r\n        this.stopIndex = 0;\r\n        this.endIndex = 0;\r\n      }\r\n    }\r\n  } \r\n  else if (step === 3) { // 减速阶段\r\n    // 开始缓慢停止\r\n    currIndex = quad.easeOut(endInterval, this.stopIndex, this.endIndex, decelerationTime);\r\n    \r\n    if (endInterval >= decelerationTime) {\r\n      if (this.intermediateStop && !this.isFinalStop) {\r\n        // 到达中间点，暂停一段时间\r\n        this.step = 4; // 进入暂停阶段\r\n        this.pauseStartTime = Date.now();\r\n      } else {\r\n        // 直接到达终点\r\n        this.step = 0;\r\n      }\r\n    }\r\n  }\r\n  else if (step === 4) { // 暂停阶段\r\n    const pauseInterval = Date.now() - this.pauseStartTime;\r\n    if (pauseInterval >= this.stopDelay) {\r\n      // 暂停结束，低速移动到最终点\r\n      this.step = 5; // 进入低速移动阶段\r\n      this.slowMoveStartTime = Date.now();\r\n      // 计算从中间点到最终点的位置\r\n      this.carveOnGunwaleOfAMovingBoat(this.prizeFlag!);\r\n      this.isFinalStop = true;\r\n    }\r\n    // 保持当前位置不变\r\n    currIndex = this.currIndex;\r\n  }\r\nelse if (step === 5) {\r\n    // 初始化移动目标\r\n\r\n\r\n    // 执行移动\r\n    if (!this._isSlowMoveInitialized) {\r\n\t\tthis.slowMoveToTarget(this.prizeFlag!);\r\n      this._isSlowMoveInitialized = true;\r\n      console.log(`开始移动：从 ${this.currIndex} 到 ${this.endIndex}`);\r\n      this.currIndex += 1;\r\n      this.draw(); // 每次移动后立即绘制\r\n    } else {\r\n      // 移动完成\r\n\t  console.log(`完成结束`);\r\n      this.step = 0;\r\n      this._isSlowMoveInitialized = false;\r\n      this.endCallback?.(this.prizes[this.prizeFlag!]);\r\n    }\r\n  }\r\n   this.currIndex = currIndex; \r\n  \r\n  if (step !== 5) this.draw();\r\n  \r\n  rAF(this.run.bind(this, num + 1));\r\n}\r\n\r\n\r\n  /**\r\n   * 计算奖品格子的几何属性\r\n   * @param { array } [...矩阵坐标, col, row]\r\n   * @return { array } [...真实坐标, width, height]\r\n   */\r\n  private getGeometricProperty ([x, y, col = 1, row = 1]: number[]) {\r\n    const { cellWidth, cellHeight } = this\r\n    const gutter = this._defaultConfig.gutter\r\n    let res = [\r\n      this.prizeArea!.x + (cellWidth + gutter) * x,\r\n      this.prizeArea!.y + (cellHeight + gutter) * y\r\n    ]\r\n    col && row && res.push(\r\n      cellWidth * col + gutter * (col - 1),\r\n      cellHeight * row + gutter * (row - 1),\r\n    )\r\n    return res\r\n  }\r\n\r\n  /**\r\n   * 换算渲染坐标\r\n   * @param x\r\n   * @param y\r\n   */\r\n  protected conversionAxis (x: number, y: number): [number, number] {\r\n    const { config } = this\r\n    return [x / config.dpr, y / config.dpr]\r\n  }\r\n}\r\n","import Lucky from './lucky'\r\nimport { UserConfigType, ImgType, ImgItemType, Tuple } from '../types/index'\r\nimport SlotMachineConfig, {\r\n  BlockType,\r\n  PrizeType,\r\n  SlotType,\r\n  DefaultConfigType,\r\n  DefaultStyleType,\r\n  EndCallbackType,\r\n} from '../types/slot'\r\nimport {\r\n  get, has,\r\n  isExpectType,\r\n  removeEnter,\r\n  computePadding,\r\n  hasBackground,\r\n  computeRange,\r\n  splitText,\r\n  getSortedArrayByIndex\r\n} from '../utils/index'\r\nimport { roundRectByArc } from '../utils/math'\r\nimport { quad } from '../utils/tween'\r\n\r\nexport default class SlotMachine extends Lucky {\r\n  // 背景\r\n  private blocks: Array<BlockType> = []\r\n  // 奖品列表\r\n  private prizes: Array<PrizeType> = []\r\n  // 插槽列表\r\n  private slots: Array<SlotType> = []\r\n  // 默认配置\r\n  private defaultConfig: DefaultConfigType = {}\r\n  private _defaultConfig: Required<DefaultConfigType> = {} as Required<DefaultConfigType>\r\n  // 默认样式\r\n  private defaultStyle: DefaultStyleType = {}\r\n  private _defaultStyle: Required<DefaultStyleType> = {} as Required<DefaultStyleType>\r\n  private endCallback: EndCallbackType = () => {}\r\n  // 离屏canvas\r\n  private _offscreenCanvas?: HTMLCanvasElement\r\n  private cellWidth = 0             // 格子宽度\r\n  private cellHeight = 0            // 格子高度\r\n  private cellAndSpacing = 0        // 格子+间距\r\n  private widthAndSpacing = 0       // 格子宽度+列间距\r\n  private heightAndSpacing = 0      // 格子高度+行间距\r\n  private FPS = 16.6                // 屏幕刷新率\r\n  private scroll: number[] = []     // 滚动的长度\r\n  private stopScroll: number[] = [] // 刻舟求剑\r\n  private endScroll: number[] = []  // 最终停止的长度\r\n  private startTime = 0             // 开始游戏的时间\r\n  private endTime = 0               // 开始停止的时间\r\n  // 默认顺序由 prizes 生成\r\n  private defaultOrder: number[] = []\r\n  /**\r\n   * 游戏当前的阶段\r\n   * step = 0 时, 游戏尚未开始\r\n   * step = 1 时, 此时处于加速阶段\r\n   * step = 2 时, 此时处于匀速阶段\r\n   * step = 3 时, 此时处于减速阶段\r\n   */\r\n  private step: 0 | 1 | 2 | 3 = 0\r\n  /**\r\n   * 中奖索引\r\n   * prizeFlag = undefined 时, 处于开始抽奖阶段, 正常旋转\r\n   * prizeFlag >= 0 时, 说明stop方法被调用, 并且传入了中奖索引\r\n   * prizeFlag === -1 时, 说明stop方法被调用, 并且传入了负值, 本次抽奖无效\r\n   */\r\n  private prizeFlag: number[] | undefined = void 0\r\n  // 奖品区域几何信息\r\n  private prizeArea?: { x: number, y: number, w: number, h: number }\r\n  // 图片缓存\r\n  private ImageCache = new Map()\r\n\r\n  /**\r\n   * 老虎机构造器\r\n   * @param config 配置项\r\n   * @param data 抽奖数据\r\n   */\r\n   constructor (config: UserConfigType, data: SlotMachineConfig) {\r\n    super(config, {\r\n      width: data.width,\r\n      height: data.height\r\n    })\r\n    this.initData(data)\r\n    this.initWatch()\r\n    this.initComputed()\r\n    // 创建前回调函数\r\n    config.beforeCreate?.call(this)\r\n    // 首次初始化\r\n    this.init()\r\n  }\r\n\r\n  protected resize(): void {\r\n    super.resize()\r\n    this.draw()\r\n    this.config.afterResize?.()\r\n  }\r\n\r\n  protected initLucky (): void {\r\n    this.cellWidth = 0\r\n    this.cellHeight = 0\r\n    this.cellAndSpacing = 0\r\n    this.widthAndSpacing = 0\r\n    this.heightAndSpacing = 0\r\n    this.FPS = 16.6\r\n    this.scroll = []\r\n    this.stopScroll = []\r\n    this.endScroll = []\r\n    this.startTime = 0\r\n    this.endTime = 0\r\n    this.prizeFlag = void 0\r\n    this.step = 0\r\n    super.initLucky()\r\n  }\r\n\r\n  /**\r\n   * 初始化数据\r\n   * @param data\r\n   */\r\n  private initData (data: SlotMachineConfig): void {\r\n    this.$set(this, 'width', data.width)\r\n    this.$set(this, 'height', data.height)\r\n    this.$set(this, 'blocks', data.blocks || [])\r\n    this.$set(this, 'prizes', data.prizes || [])\r\n    this.$set(this, 'slots', data.slots || [])\r\n    this.$set(this, 'defaultConfig', data.defaultConfig || {})\r\n    this.$set(this, 'defaultStyle', data.defaultStyle || {})\r\n    this.$set(this, 'endCallback', data.end)\r\n  }\r\n\r\n  /**\r\n   * 初始化属性计算\r\n   */\r\n  private initComputed (): void {\r\n    // 默认配置\r\n    this.$computed(this, '_defaultConfig', () => {\r\n      const config = {\r\n        mode: 'vertical',\r\n        rowSpacing: 0,\r\n        colSpacing: 5,\r\n        speed: 20,\r\n        direction: 1,\r\n        accelerationTime: 2500,\r\n        decelerationTime: 2500,\r\n        ...this.defaultConfig\r\n      }\r\n      config.rowSpacing = this.getLength(config.rowSpacing)\r\n      config.colSpacing = this.getLength(config.colSpacing)\r\n      return config\r\n    })\r\n    // 默认样式\r\n    this.$computed(this, '_defaultStyle', () => {\r\n      return {\r\n        borderRadius: 0,\r\n        fontColor: '#000',\r\n        fontSize: '18px',\r\n        fontStyle: 'sans-serif',\r\n        fontWeight: '400',\r\n        background: 'rgba(0,0,0,0)',\r\n        wordWrap: true,\r\n        lengthLimit: '90%',\r\n        ...this.defaultStyle\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 初始化观察者\r\n   */\r\n  private initWatch (): void {\r\n    // 重置宽度\r\n    this.$watch('width', (newVal: string | number) => {\r\n      this.data.width = newVal\r\n      this.resize()\r\n    })\r\n    // 重置高度\r\n    this.$watch('height', (newVal: string | number) => {\r\n      this.data.height = newVal\r\n      this.resize()\r\n    })\r\n    // 监听 blocks 数据的变化\r\n    this.$watch('blocks', (newData: Array<BlockType>) => {\r\n      this.initImageCache()\r\n    }, { deep: true })\r\n    // 监听 prizes 数据的变化\r\n    this.$watch('prizes', (newData: Array<PrizeType>) => {\r\n      this.initImageCache()\r\n    }, { deep: true })\r\n    // 监听 prizes 数据的变化\r\n    this.$watch('slots', (newData: Array<PrizeType>) => {\r\n      this.drawOffscreenCanvas()\r\n      this.draw()\r\n    }, { deep: true })\r\n    this.$watch('defaultConfig', () => this.draw(), { deep: true })\r\n    this.$watch('defaultStyle', () => this.draw(), { deep: true })\r\n    this.$watch('endCallback', () => this.init())\r\n  }\r\n\r\n  /**\r\n   * 初始化 canvas 抽奖\r\n   */\r\n  public async init (): Promise<void> {\r\n    this.initLucky()\r\n    const { config } = this\r\n    // 初始化前回调函数\r\n    config.beforeInit?.call(this)\r\n    // 先绘制一次\r\n    this.drawOffscreenCanvas()\r\n    this.draw()\r\n    // 异步加载图片\r\n    await this.initImageCache()\r\n    // 初始化后回调函数\r\n    config.afterInit?.call(this)\r\n  }\r\n\r\n  private initImageCache (): Promise<void> {\r\n    return new Promise((resolve) => {\r\n      const willUpdateImgs = {\r\n        blocks: this.blocks.map(block => block.imgs),\r\n        prizes: this.prizes.map(prize => prize.imgs),\r\n      }\r\n      ;(<(keyof typeof willUpdateImgs)[]>Object.keys(willUpdateImgs)).forEach(imgName => {\r\n        const willUpdate = willUpdateImgs[imgName]\r\n        // 循环遍历所有图片\r\n        const allPromise: Promise<void>[] = []\r\n        willUpdate && willUpdate.forEach((imgs, cellIndex) => {\r\n          imgs && imgs.forEach((imgInfo, imgIndex) => {\r\n            allPromise.push(this.loadAndCacheImg(imgName, cellIndex, imgIndex))\r\n          })\r\n        })\r\n        Promise.all(allPromise).then(() => {\r\n          this.drawOffscreenCanvas()\r\n          this.draw()\r\n          resolve()\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 根据索引单独加载指定图片并缓存\r\n   * @param cellName 模块名称\r\n   * @param cellIndex 模块索引\r\n   * @param imgName 模块对应的图片缓存\r\n   * @param imgIndex 图片索引\r\n   */\r\n  private async loadAndCacheImg (\r\n    cellName: 'blocks' | 'prizes',\r\n    cellIndex: number,\r\n    imgIndex: number\r\n  ): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      let cell: BlockType | PrizeType = this[cellName][cellIndex]\r\n      if (!cell || !cell.imgs) return\r\n      const imgInfo = cell.imgs[imgIndex]\r\n      if (!imgInfo) return\r\n      // 异步加载图片\r\n      this.loadImg(imgInfo.src, imgInfo).then(async currImg => {\r\n        if (typeof imgInfo.formatter === 'function') {\r\n          currImg = await Promise.resolve(imgInfo.formatter.call(this, currImg))\r\n        }\r\n        this.ImageCache.set(imgInfo['src'], currImg)\r\n        resolve()\r\n      }).catch(err => {\r\n        console.error(`${cellName}[${cellIndex}].imgs[${imgIndex}] ${err}`)\r\n        reject()\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 绘制离屏canvas\r\n   */\r\n  protected drawOffscreenCanvas (): void {\r\n    const { _defaultConfig, _defaultStyle } = this\r\n    const { w, h } = this.drawBlocks()!\r\n    // 计算单一奖品格子的宽度和高度\r\n    const prizesLen = this.prizes.length\r\n    const { cellWidth, cellHeight, widthAndSpacing, heightAndSpacing } = this.displacementWidthOrHeight()\r\n    this.defaultOrder = new Array(prizesLen).fill(void 0).map((v, i) => i)\r\n    let maxOrderLen = 0, maxOffWidth = 0, maxOffHeight = 0\r\n    this.slots.forEach((slot, slotIndex) => {\r\n      // 初始化 scroll 的值\r\n      if (this.scroll[slotIndex] === void 0) this.scroll[slotIndex] = 0\r\n      // 如果没有order属性, 就填充prizes\r\n      const order = slot.order || this.defaultOrder\r\n      // 计算最大值\r\n      const currLen = order.length\r\n      maxOrderLen = Math.max(maxOrderLen, currLen)\r\n      maxOffWidth = Math.max(maxOffWidth, w + widthAndSpacing * currLen)\r\n      maxOffHeight = Math.max(maxOffHeight, h + heightAndSpacing * currLen)\r\n    })\r\n    // 创建一个离屏Canvas来存储画布的内容\r\n    const { _offscreenCanvas, _ctx } = this.getOffscreenCanvas(maxOffWidth, maxOffHeight)!\r\n    this._offscreenCanvas = _offscreenCanvas\r\n    // 绘制插槽\r\n    this.slots.forEach((slot, slotIndex) => {\r\n      const cellX = cellWidth * slotIndex\r\n      const cellY = cellHeight * slotIndex\r\n      let lengthOfCopy = 0\r\n      // 绘制奖品\r\n      const newPrizes = getSortedArrayByIndex(this.prizes, slot.order||this.defaultOrder)\r\n      // 如果没有奖品则打断逻辑\r\n      if (!newPrizes.length) return\r\n      newPrizes.forEach((cell, cellIndex) => {\r\n        if (!cell) return\r\n        const prizesX = widthAndSpacing * cellIndex + _defaultConfig.colSpacing / 2\r\n        const prizesY = heightAndSpacing * cellIndex + _defaultConfig.rowSpacing / 2\r\n        const [_x, _y, spacing] = this.displacement(\r\n          [cellX, prizesY, heightAndSpacing],\r\n          [prizesX, cellY, widthAndSpacing]\r\n        )\r\n        lengthOfCopy += spacing\r\n        // 绘制背景\r\n        const background = cell.background || _defaultStyle.background\r\n        if (hasBackground(background)) {\r\n          const borderRadius = this.getLength(has(cell, 'borderRadius') ? cell.borderRadius : _defaultStyle.borderRadius)\r\n          roundRectByArc(_ctx, _x, _y, cellWidth, cellWidth, borderRadius)\r\n          _ctx.fillStyle = background\r\n          _ctx.fill()\r\n        }\r\n        // 绘制图片\r\n        cell.imgs && cell.imgs.forEach((imgInfo, imgIndex) => {\r\n          const cellImg = this.ImageCache.get(imgInfo.src)\r\n          if (!cellImg) return\r\n          const [trueWidth, trueHeight] = this.computedWidthAndHeight(cellImg, imgInfo, cellWidth, cellHeight)\r\n          const [xAxis, yAxis] = [\r\n            _x + this.getOffsetX(trueWidth, cellWidth) + this.getLength(imgInfo.left, cellWidth),\r\n            _y + this.getLength(imgInfo.top, cellHeight)\r\n          ]\r\n          this.drawImage(_ctx, cellImg, xAxis, yAxis, trueWidth, trueHeight)\r\n        })\r\n        // 绘制文字\r\n        cell.fonts && cell.fonts.forEach(font => {\r\n          // 字体样式\r\n          const style = font.fontStyle || _defaultStyle.fontStyle\r\n          // 字体加粗\r\n          const fontWeight = font.fontWeight || _defaultStyle.fontWeight\r\n          // 字体大小\r\n          const size = this.getLength(font.fontSize || _defaultStyle.fontSize)\r\n          // 字体行高\r\n          const lineHeight = font.lineHeight || _defaultStyle.lineHeight || font.fontSize || _defaultStyle.fontSize\r\n          const wordWrap = has(font, 'wordWrap') ? font.wordWrap : _defaultStyle.wordWrap\r\n          const lengthLimit = font.lengthLimit || _defaultStyle.lengthLimit\r\n          const lineClamp = font.lineClamp || _defaultStyle.lineClamp\r\n          _ctx.font = `${fontWeight} ${size >> 0}px ${style}`\r\n          _ctx.fillStyle = font.fontColor || _defaultStyle.fontColor\r\n          let lines = [], text = String(font.text)\r\n          // 计算文字换行\r\n          if (wordWrap) {\r\n            // 最大宽度\r\n            let maxWidth = this.getLength(lengthLimit, cellWidth)\r\n            lines = splitText(_ctx, removeEnter(text), () => maxWidth, lineClamp)\r\n          } else {\r\n            lines = text.split('\\n')\r\n          }\r\n          lines.forEach((line, lineIndex) => {\r\n            _ctx.fillText(\r\n              line,\r\n              _x + this.getOffsetX(_ctx.measureText(line).width, cellWidth) + this.getLength(font.left, cellWidth),\r\n              _y + this.getLength(font.top, cellHeight) + (lineIndex + 1) * this.getLength(lineHeight)\r\n            )\r\n          })\r\n        })\r\n      })\r\n      const [_x, _y, _w, _h] = this.displacement(\r\n        [cellX, 0, cellWidth, lengthOfCopy],\r\n        [0, cellY, lengthOfCopy, cellHeight]\r\n      )\r\n      let drawLen = lengthOfCopy\r\n      while (drawLen < maxOffHeight + lengthOfCopy) {\r\n        const [drawX, drawY] = this.displacement([_x, drawLen], [drawLen, _y])\r\n        this.drawImage(\r\n          _ctx, _offscreenCanvas,\r\n          _x, _y, _w, _h,\r\n          drawX, drawY, _w, _h\r\n        )\r\n        drawLen += lengthOfCopy\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 绘制背景区域\r\n   */\r\n  protected drawBlocks (): SlotMachine['prizeArea'] {\r\n    const { config, ctx, _defaultConfig, _defaultStyle } = this\r\n    // 绘制背景区域, 并计算奖品区域\r\n    return this.prizeArea = this.blocks.reduce(({x, y, w, h}, block, blockIndex) => {\r\n      const [paddingTop, paddingBottom, paddingLeft, paddingRight] = computePadding(block, this.getLength.bind(this))\r\n      const r = block.borderRadius ? this.getLength(block.borderRadius) : 0\r\n      // 绘制边框\r\n      const background = block.background || _defaultStyle.background\r\n      if (hasBackground(background)) {\r\n        roundRectByArc(ctx, x, y, w, h, r)\r\n        ctx.fillStyle = background\r\n        ctx.fill()\r\n      }\r\n      // 绘制图片\r\n      block.imgs && block.imgs.forEach((imgInfo, imgIndex) => {\r\n        const blockImg = this.ImageCache.get(imgInfo.src)\r\n        if (!blockImg) return\r\n        // 绘制图片\r\n        const [trueWidth, trueHeight] = this.computedWidthAndHeight(blockImg, imgInfo, w, h)\r\n        const [xAxis, yAxis] = [this.getOffsetX(trueWidth, w) + this.getLength(imgInfo.left, w), this.getLength(imgInfo.top, h)]\r\n        this.drawImage(ctx, blockImg, x + xAxis, y + yAxis, trueWidth, trueHeight)\r\n      })\r\n      return {\r\n        x: x + paddingLeft,\r\n        y: y + paddingTop,\r\n        w: w - paddingLeft - paddingRight,\r\n        h: h - paddingTop - paddingBottom\r\n      }\r\n    }, { x: 0, y: 0, w: this.boxWidth, h: this.boxHeight })\r\n  }\r\n\r\n  /**\r\n   * 绘制老虎机抽奖\r\n   */\r\n  protected draw (): void {\r\n    const { config, ctx, _defaultConfig, _defaultStyle } = this\r\n    // 触发绘制前回调\r\n    config.beforeDraw?.call(this, ctx)\r\n    // 清空画布\r\n    ctx.clearRect(0, 0, this.boxWidth, this.boxHeight)\r\n    // 绘制背景\r\n    const { x, y, w, h } = this.drawBlocks()!\r\n    // 绘制插槽\r\n    if (!this._offscreenCanvas) return\r\n    const { cellWidth, cellHeight, cellAndSpacing, widthAndSpacing, heightAndSpacing } = this\r\n    this.slots.forEach((slot, slotIndex) => {\r\n      const order = slot.order || this.defaultOrder\r\n      // 绘制临界点\r\n      const _p = cellAndSpacing * order.length\r\n      // 调整奖品垂直居中\r\n      const start = this.displacement(-(h - heightAndSpacing) / 2, -(w - widthAndSpacing) / 2)\r\n      let scroll = this.scroll[slotIndex] + start\r\n      // scroll 会无限累加 1 / -1\r\n      if (scroll < 0) {\r\n        scroll = scroll % _p + _p\r\n      }\r\n      if (scroll > _p) {\r\n        scroll = scroll % _p\r\n      }\r\n      const [sx, sy, sw, sh] = this.displacement(\r\n        [cellWidth * slotIndex, scroll, cellWidth, h],\r\n        [scroll, cellHeight * slotIndex, w, cellHeight]\r\n      )\r\n      const [dx, dy, dw, dh] = this.displacement(\r\n        [x + widthAndSpacing * slotIndex, y, cellWidth, h],\r\n        [x, y + heightAndSpacing * slotIndex, w, cellHeight]\r\n      )\r\n      this.drawImage(ctx, this._offscreenCanvas!, sx, sy, sw, sh, dx, dy, dw, dh)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 刻舟求剑\r\n   */\r\n  private carveOnGunwaleOfAMovingBoat (): void {\r\n    const { _defaultConfig, prizeFlag, cellAndSpacing } = this\r\n    // 记录开始停止的时间戳\r\n    this.endTime = Date.now()\r\n    this.slots.forEach((slot, slotIndex) => {\r\n      const order = slot.order || this.defaultOrder\r\n      if (!order.length) return\r\n      const speed = slot.speed || _defaultConfig.speed\r\n      const direction = slot.direction || _defaultConfig.direction\r\n      const orderIndex = order.findIndex(prizeIndex => prizeIndex === prizeFlag![slotIndex])\r\n      const _p = cellAndSpacing * order.length\r\n      const stopScroll = this.stopScroll[slotIndex] = this.scroll[slotIndex]\r\n      let i = 0\r\n      while (++i) {\r\n        const endScroll = cellAndSpacing * orderIndex + (_p * i * direction) - stopScroll\r\n        const currSpeed = quad.easeOut(this.FPS, stopScroll, endScroll, _defaultConfig.decelerationTime) - stopScroll\r\n        if (Math.abs(currSpeed) > speed) {\r\n          this.endScroll[slotIndex] = endScroll\r\n          break\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 对外暴露: 开始抽奖方法\r\n   */\r\n   public play (): void {\r\n    if (this.step !== 0) return\r\n    // 记录开始游戏的时间\r\n    this.startTime = Date.now()\r\n    // 清空中奖索引\r\n    this.prizeFlag = void 0\r\n    // 开始加速\r\n    this.step = 1\r\n    // 触发回调\r\n    this.config.afterStart?.()\r\n    // 开始渲染\r\n    this.run()\r\n  }\r\n\r\n  public stop (index: number | number[]): void {\r\n    if (this.step === 0 || this.step === 3) return\r\n    // 设置中奖索引\r\n    if (typeof index === 'number') {\r\n      this.prizeFlag = new Array(this.slots.length).fill(index)\r\n    } else if (isExpectType(index, 'array')) {\r\n      if (index.length === this.slots.length) {\r\n        this.prizeFlag = index\r\n      } else {\r\n        this.stop(-1)\r\n        return console.error(`stop([${index}]) 参数长度的不正确`)\r\n      }\r\n    } else {\r\n      this.stop(-1)\r\n      return console.error(`stop() 无法识别的参数类型 ${typeof index}`)\r\n    }\r\n    // 如果包含负数则停止游戏, 反之则继续游戏\r\n    if (this.prizeFlag?.includes(-1)) {\r\n      this.prizeFlag = []\r\n      // 停止游戏\r\n      this.step = 0\r\n    } else {\r\n      // 进入匀速\r\n      this.step = 2\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 让游戏动起来\r\n   * @param num 记录帧动画执行多少次\r\n   */\r\n  private run (num: number = 0): void {\r\n    const { rAF, step, prizeFlag, _defaultConfig, cellAndSpacing, slots } = this\r\n    const { accelerationTime, decelerationTime } = _defaultConfig\r\n    // 游戏结束\r\n    if (this.step === 0 && prizeFlag?.length === slots.length) {\r\n      let flag = prizeFlag[0]\r\n      for (let i = 0; i < slots.length; i++) {\r\n        const slot = slots[i], currFlag = prizeFlag[i]\r\n        const order = slot.order || this.defaultOrder\r\n        if (!order?.includes(currFlag) || flag !== currFlag) {\r\n          flag = -1\r\n          break\r\n        }\r\n      }\r\n      this.endCallback?.(this.prizes.find((prize, index) => index === flag) || void 0)\r\n      return\r\n    }\r\n    // 如果长度为 0 就直接停止游戏\r\n    if (prizeFlag !== void 0 && !prizeFlag.length) return\r\n    // 计算最终停止的位置\r\n    if (this.step === 3 && !this.endScroll.length) this.carveOnGunwaleOfAMovingBoat()\r\n    // 计算时间间隔\r\n    const startInterval = Date.now() - this.startTime\r\n    const endInterval = Date.now() - this.endTime\r\n    // 分别计算对应插槽的加速度\r\n    slots.forEach((slot, slotIndex) => {\r\n      const order = slot.order || this.defaultOrder\r\n      if (!order || !order.length) return\r\n      const _p = cellAndSpacing * order.length\r\n      const speed = Math.abs(slot.speed || _defaultConfig.speed)\r\n      const direction = slot.direction || _defaultConfig.direction\r\n      let scroll = 0, prevScroll = this.scroll[slotIndex]\r\n      if (step === 1 || startInterval < accelerationTime) { // 加速阶段\r\n        // 记录帧率\r\n        this.FPS = startInterval / num\r\n        const currSpeed = quad.easeIn(startInterval, 0, speed, accelerationTime)\r\n        // 加速到最大速度后, 即可进入匀速阶段\r\n        if (currSpeed === speed) {\r\n          this.step = 2\r\n        }\r\n        scroll = (prevScroll + (currSpeed * direction)) % _p\r\n      } else if (step === 2) { // 匀速阶段\r\n        // 速度保持不变\r\n        scroll = (prevScroll + (speed * direction)) % _p\r\n        // 如果有 prizeFlag 有值, 则进入减速阶段\r\n        if (prizeFlag?.length === slots.length) {\r\n          this.step = 3\r\n          // 清空上一轮的位置信息\r\n          this.stopScroll = []\r\n          this.endScroll = []\r\n        }\r\n      } else if (step === 3 && endInterval) { // 减速阶段\r\n        // 开始缓慢停止\r\n        const stopScroll = this.stopScroll[slotIndex]\r\n        const endScroll = this.endScroll[slotIndex]\r\n        scroll = quad.easeOut(endInterval, stopScroll, endScroll, decelerationTime)\r\n        if (endInterval >= decelerationTime) {\r\n          this.step = 0\r\n        }\r\n      }\r\n      this.scroll[slotIndex] = scroll\r\n    })\r\n    this.draw()\r\n    rAF(this.run.bind(this, num + 1))\r\n  }\r\n\r\n  // 根据mode置换数值\r\n  private displacement<T> (a: T, b: T): T {\r\n    return this._defaultConfig.mode === 'horizontal' ? b : a\r\n  }\r\n\r\n  // 根据mode计算宽高\r\n  private displacementWidthOrHeight () {\r\n    const mode = this._defaultConfig.mode\r\n    const slotsLen = this.slots.length\r\n    const { colSpacing, rowSpacing } = this._defaultConfig\r\n    const { x, y, w, h } = this.prizeArea || this.drawBlocks()!\r\n    let cellWidth = 0, cellHeight = 0, widthAndSpacing = 0, heightAndSpacing = 0\r\n    if (mode === 'horizontal') {\r\n      cellHeight = this.cellHeight = (h - rowSpacing * (slotsLen - 1)) / slotsLen\r\n      cellWidth = this.cellWidth = cellHeight\r\n    } else {\r\n      cellWidth = this.cellWidth = (w - colSpacing * (slotsLen - 1)) / slotsLen\r\n      cellHeight = this.cellHeight = cellWidth\r\n    }\r\n    widthAndSpacing = this.widthAndSpacing = this.cellWidth + colSpacing\r\n    heightAndSpacing = this.heightAndSpacing = this.cellHeight + rowSpacing\r\n    if (mode === 'horizontal') {\r\n      this.cellAndSpacing = widthAndSpacing\r\n    } else {\r\n      this.cellAndSpacing = heightAndSpacing\r\n    }\r\n    return {\r\n      cellWidth,\r\n      cellHeight,\r\n      widthAndSpacing,\r\n      heightAndSpacing,\r\n    }\r\n  }\r\n}\r\n","import { ImgType } from '../types/index'\r\nimport { roundRectByArc } from './math'\r\n\r\n/**\r\n * 根据路径获取图片对象\r\n * @param { string } src 图片路径\r\n * @returns { Promise<HTMLImageElement> } 图片标签\r\n */\r\nexport const getImage = (src: string): Promise<ImgType> => {\r\n  return new Promise((resolve, reject) => {\r\n    const img = new Image()\r\n    img.onload = () => resolve(img)\r\n    img.onerror = err => reject(err)\r\n    img.src = src\r\n  })\r\n}\r\n\r\n/**\r\n * 切割圆角\r\n * @param img 将要裁剪的图片对象\r\n * @param radius 裁剪的圆角半径\r\n * @returns 返回一个离屏 canvas 用于渲染\r\n */\r\nexport const cutRound = (img: ImgType, radius: number): ImgType => {\r\n  const canvas = document.createElement('canvas')\r\n  const ctx = canvas.getContext('2d')!\r\n  const { width, height } = img\r\n  canvas.width = width\r\n  canvas.height = height\r\n  roundRectByArc(ctx, 0, 0, width, height, radius)\r\n  ctx.clip()\r\n  ctx.drawImage(img, 0, 0, width, height)\r\n  return canvas\r\n}\r\n\r\n/**\r\n * 透明度\r\n * @param img 将要处理的图片对象\r\n * @param opacity 透明度\r\n * @returns 返回一个离屏 canvas 用于渲染\r\n */\r\nexport const opacity = (\r\n  img: ImgType,\r\n  opacity: number\r\n): ImgType => {\r\n  const canvas = document.createElement('canvas')\r\n  const ctx = canvas.getContext('2d')!\r\n  const { width, height } = img\r\n  canvas.width = width\r\n  canvas.height = height\r\n  // 绘制图片, 部分浏览器不支持 filter 属性, 需要处理兼容\r\n  if (typeof ctx.filter === 'string') {\r\n    ctx.filter = `opacity(${opacity * 100}%)`\r\n    ctx.drawImage(img, 0, 0, width, height)\r\n  } else {\r\n    ctx.drawImage(img, 0, 0, width, height)\r\n    const imageData = ctx.getImageData(0, 0, width, height)\r\n    const { data } = imageData\r\n    const len = data.length\r\n    for (let i = 0; i < len; i += 4) {\r\n      const alpha = data[i + 3]\r\n      if (alpha !== 0) data[i + 3] = alpha * opacity\r\n    }\r\n    ctx.putImageData(imageData, 0, 0)\r\n  }\r\n  return canvas\r\n}\r\n\r\n/**\r\n * 权重矩阵\r\n * @param radius 模糊半径\r\n * @param sigma \r\n * @returns 返回一个权重和为1的矩阵\r\n */\r\nconst getMatrix = (radius: number, sigma?: number): number[] => {\r\n  sigma = sigma || radius / 3\r\n  const r = Math.ceil(radius)\r\n  const sigma_2 = sigma * sigma\r\n  const sigma2_2 = 2 * sigma_2\r\n  const denominator = 1 / (2 * Math.PI * sigma_2)\r\n  const matrix = []\r\n  let total = 0\r\n  // 计算权重矩阵\r\n  for (let x = -r; x <= r; x++) {\r\n    for (let y = -r; y <= r; y++) {\r\n      // 套用二维高斯函数得到每个点的权重\r\n      const res = denominator * Math.exp(-(x * x + y * y) / sigma2_2)\r\n      matrix.push(res)\r\n      total += res\r\n    }\r\n  }\r\n  // 让矩阵中所有权重的和等于1\r\n  for (let i = 0; i < matrix.length; i++) {\r\n    matrix[i] /= total\r\n  }\r\n  return matrix\r\n}\r\n\r\n/**\r\n * 高斯模糊\r\n * @param img 将要处理的图片对象\r\n * @param radius 模糊半径\r\n * @returns 返回一个离屏 canvas 用于渲染\r\n */\r\nexport const blur = (\r\n  img: ImgType,\r\n  radius: number\r\n): ImgType => {\r\n  const canvas = document.createElement('canvas')\r\n  const ctx = canvas.getContext('2d')!\r\n  const { width, height } = img\r\n  // 设置图片宽高\r\n  canvas.width = width\r\n  canvas.height = height\r\n  ctx.drawImage(img, 0, 0, width, height)\r\n  const ImageData = ctx.getImageData(0, 0, width, height)\r\n  const { data } = ImageData\r\n  const matrix = getMatrix(radius)\r\n  const r = Math.ceil(radius)\r\n  const w = width * 4\r\n  const cols = r * 2 + 1\r\n  const len = data.length, matrixLen = matrix.length\r\n  for (let i = 0; i < len; i += 4) {\r\n    // 处理\r\n  }\r\n  console.log(ImageData)\r\n  ctx.putImageData(ImageData, 0, 0)\r\n  return canvas\r\n}\r\n\r\nexport const getBase64Image = () => {\r\n\r\n}\r\n"],"names":["Array","prototype","includes","Object","defineProperty","value","valueToFind","fromIndex","this","TypeError","o","len","length","x","y","n","k","Math","max","abs","isNaN","String","search","start","indexOf","find","predicate","thisArg","arguments","kValue","call","isExpectType","param","types","_i","some","type","toString","slice","toLowerCase","has","data","key","hasOwnProperty","removeEnter","str","filter","s","join","hasBackground","color","toLocaleLowerCase","trim","test","alpha","exec","num","_typeof","NaN","Number","computePadding","block","getLength","padding","_a","split","map","paddingTop","paddingBottom","paddingLeft","paddingRight","res","computeRange","rangeArr","ascendingArr","sum","reduce","prev","curr","push","random","findIndex","splitText","ctx","text","getWidth","lineClamp","Infinity","lines","EndWidth","measureText","width","i","currWidth","maxWidth","Dep","subs","addSub","sub","notify","forEach","update","hasProto","def","obj","val","enumerable","writable","configurable","oldArrayProto","newArrayProto","create","method","args","apply","luckyOb","walk","dep","Observer","isArray","getOwnPropertyNames","keys","defineReactive","observe","property","getOwnPropertyDescriptor","getter","get","setter","set","childOb","target","newVal","uid","Watcher","$lucky","expr","cb","options","id","deep","path","segments","segment","parsePath","dfs","traverse","oldVal","Lucky","config","_this","version","htmlFontSize","rAF","boxWidth","boxHeight","el","nodeType","divElement","flag","document","querySelector","canvasElement","createElement","appendChild","getContext","setAttribute","concat","addEventListener","e","handleClick","initWindowFunction","console","error","window","fn","wait","timeId","setTimeout","clearTimeout","throttle","resize","MutationObserver","documentElement","attributes","_b","beforeResize","setHTMLFontSize","setDpr","resetWidthAndHeight","zoomCanvas","initLucky","getComputedStyle","fontSize","clearCanvas","height","clearRect","dpr","devicePixelRatio","offsetWidth","offsetHeight","style","overflow","transform","scale","requestAnimationFrame","callback","setInterval","clearInterval","timeout_1","isWeb","loadImg","src","info","resolveName","Promise","resolve","reject","imgObj_1","Image","onload","onerror","drawImage","imgObj","drawImg","rectInfo","_c","miniProgramOffCtx","temp","getImageData","putImageData","index","err","computedWidthAndHeight","imgInfo","maxHeight","trueWidth","trueHeight","changeUnits","denominator","replace","unit","handleCssUnit","px","rem","vw","innerWidth","otherHandleCssUnit","maxLength","getOffsetX","getOffscreenCanvas","_offscreenCanvas","_ctx","$set","$computed","$watch","handler","watchOpt","watcher","immediate","getAngle","deg","PI","fanShapedByArc","minRadius","maxRadius","end","gutter","beginPath","r","maxGutter","maxStart","maxEnd","arc","lineTo","sin","cos","toFixed","closePath","roundRectByArc","w","h","min","moveTo","quad","t","b","c","d","LuckyWheel","_super","blocks","prizes","buttons","defaultConfig","defaultStyle","_defaultConfig","_defaultStyle","Radius","prizeRadius","prizeDeg","prizeAng","rotateDeg","maxBtnRadius","startTime","endTime","stopDeg","endDeg","FPS","intermediateStop","intermediateIndex","stopDelay","step","ImageCache","Map","initData","initWatch","initComputed","beforeCreate","init","__extends","translate","draw","afterResize","prizeFlag","__assign","offsetDegree","speed","speedFunction","accelerationTime","decelerationTime","stopRange","fontColor","fontStyle","fontWeight","background","wordWrap","lengthLimit","newData","initImageCache","beforeInit","sent","afterInit","willUpdateImgs","imgs","prize","btn","imgName","willUpdate","allPromise","cellIndex","imgIndex","loadAndCacheImg","all","then","isPointInPath","offsetX","offsetY","startCallback","cellName","cell","currImg","__awaiter","formatter","drawBlock","radius","blockIndex","fillStyle","fill","blockImg","left","top","xAxis","yAxis","save","rotate","restore","beforeDraw","shortSide","getFontX","font","line","getFontY","lineIndex","lineHeight","prizeIndex","currMiddleDeg","prizeHeight","prizeImg","fonts","tan","fillText","btnIndex","pointer","btnImg","afterDraw","carveOnGunwaleOfAMovingBoat","Date","now","prevSpeed","prevDeg","currSpeed","play","afterStart","run","stop","item","range","startInterval","endInterval","bind","endCallback","conversionAxis","LuckyGrid","rows","cols","activeStyle","_activeStyle","cellWidth","cellHeight","currIndex","stopIndex","endIndex","demo","timer","isFinalStop","pauseStartTime","slowMoveStartTime","_isSlowMoveInitialized","lastDrawTime","cells","button","borderRadius","shadow","btnImgs","__spreadArray","getGeometricProperty","col","row","rect","request","defaultImg","activeImg","prizeArea","handleBackground","isActive","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","cellImg","renderImg","size","maxWidth_1","context","shift","direction","getLenOfTanDeg","gradient","createLinearGradient","addColorStop","getLinearGradient","targetIndex","finalTarget","prevIndex","slowMoveToTarget","currentPos","distance","log","SlotMachine","slots","cellAndSpacing","widthAndSpacing","heightAndSpacing","scroll","stopScroll","endScroll","defaultOrder","mode","rowSpacing","colSpacing","drawOffscreenCanvas","drawBlocks","prizesLen","displacementWidthOrHeight","v","maxOrderLen","maxOffWidth","maxOffHeight","slot","slotIndex","currLen","order","_d","cellX","cellY","lengthOfCopy","newPrizes","arr","getSortedArrayByIndex","prizesX","prizesY","displacement","_x","_y","spacing","_w","_h","drawLen","drawX","drawY","_p","sx","sy","sw","sh","dx","dy","dw","dh","orderIndex","prevScroll","flag_1","currFlag","a","slotsLen","img","canvas","clip","opacity","imageData"],"mappings":"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"}